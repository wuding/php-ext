<?php

namespace Ext\Appendices\Indexes;

class FunctionAndMethodListing
{
    const VERSION = '22.3.29';

    public $a =  array(
        'abs' => 'Absolute value',
        'acos' => 'Arc cosine',
        'acosh' => 'Inverse hyperbolic cosine',
        'adddcslashes' => 'Quote string with slashes in a C style',
        'addslashes' => 'Quote string with slashes',
        'apache_child_teminate' => 'TTerminate apache proces afer this request',
        'apache_getenv' => 'Get an Apache subprocess_env variable',
        'apache_get_modules' => 'Get a list of loaded Apache modules',
        'apache_get_version' => 'Fetch Apache version',
        'apache_look_uri' => 'Perform a partial request for the specified URI and return all info about it',
        'apache_note' => 'Get and set apache request notes',
        'apache_request_headers' => 'Fetch all HTTP request headers',
        'apache_response_headers' => 'Fetch all HTTP respone headers',
        'apache_setenv' => 'Set an Apache subprocess_env variable',
        'APCUIterator::current' => 'Get current item',
        'APCUIterator::getTotalCount' => 'Get total count',
        'APCUIterator::getTotalHits' => 'Get total cache hits',
        'APCUIterator::getTotalSize' => 'Get total cache size',
        'APCUIterator::key' => 'Get iterator key',
        'APCUIterator::next' => 'Move pointer to next item',
        'APCUIterator::rewind' => 'Rewinds iterator',
        'APCUIterator::valid' => 'Checks if current position id valid',
        'APCUIterator::__construct' => 'Constructs an APCIterator object',
        'apcu_add' => 'Cache a new variable in the data store',
        'apcu_cache_info' => "Retrieves cached information from APCu's data store",
        'apcu_cas' => 'Updates an old value with va new value',
        'apcu_clear_cache' => 'Clears the APCu cache',
        'apcu_dec' => 'Decrease a stored number',
        'apcu_delete' => 'Removes a stored vaiable from the cache',
        'apcu_enabled' => 'Whether APCu is usable in the current environment',
        'apcu_entry' => 'Atomically fetch or generate a cache entry',
        'apcu_exists' => 'Checks if entry exists',
        'apcu_fetch' => 'Fetch a stord variable from the cache',
        'apcu_inc' => 'Increase a stored number',
        'apcu_key_info' => 'Get detrailed information aboutr the cache key',
        'apcu_sma_info' => 'Retrives APCu Shard Memory Allocation infomation',
        'apcu_store' => 'Cache a variable in the data store',
        'AppendIterator::append' => 'Appends an iterator',
        'AppendIterator::current' => 'Gts the current value',
        'AppendIterator::getArrayItrator' => 'Gets the ArrayIterator',
        'AppendIterator::getInnerIterator' => 'Gets th inner iteraor',
        'AppendIterator::getIteratorIndex' =>  'Gets an index of iterators',
        'AppendIterator::key' => 'Gets the current key',
        'AppendIterator::next' => 'Moves to the next element',
        'AppendIterator::rewind' => 'Rewinds the Iterator',
        'AppendIterator::valid' => 'Checks validity of the current element',
        'AppendIterator::__construct' => 'Constructs an AppendIterator',
        'array' => 'Crate an array',
        'ArrayAccess::offsetExists' => 'Whether an offset exists',
        'ArrayAccess::offsetGet' => 'Offset to retrieve',
        'ArrayAccess::offsetSet' => 'Assign a value to the spcifid offset',
        'ArrayAccess::offsetUnset' => 'Unset an offset',
        'ArrayIterator::append' => 'Append an element',
        'ArrayIterator::count' => 'Sort entries by values',
        'ArrayIterator::asort' => 'Count elements',
        'ArrayIterator::current' => 'Return current array entry',
        'ArrayIterator::getArrayCopy' => 'getFlags',
        'ArrayIterator::getFlags' => 'Get behavior flags',
        'ArrayIterator::key' => 'Return current array key',
        'ArrayIterator::ksort' => 'Sort entries by keys',
        'ArrayIterator::natcasesort' => 'Sort entries naturally, case insensitive',
        'ArrayIterator::natsort' => 'sort entries naturally',
        'ArrayIterator::next' => 'Move to next entry',
        'ArrayIterator::offestExists' => 'Check if offset exists',
        'ArrayIterator::offsetGet' => 'Get value for an offset',
        'ArrayIteraror::offsetSet' => 'Set value for an offset',
        'ArrayIterator::offstUnset' => 'Unset value for an offset',
        'ArrayIterator::rewind' => 'Rewind array bsack to the start',
        'ArrayIterator::seek' => 'Seek to position',
        'ArrayIterator::serialize' => 'Serialize',
        'ArrayIterator::setFlags' => 'Set behaviour flags',
        'ArrayIterator::uasort' => 'Sort with a user-defined comparisn functin and main tain index association',
        'ArrayIterator::uksort' => 'Sort by keys using a user-defined comparison function',
        'ArrayIterator::unserialize' =>  'Unsriablize',
        'ArrayIterator::valid' => 'Check whether array contains more entries',
        'ArrayIterator::__construct' =>'Construct an ArrayIterator',
        'ArrayObject::append' => 'Appends the value',
        'ArrayObject::asort' => 'Sort the entries by value',
        'ArrayObject::count' => 'Get the number of public properties in the ArrayObject',
        'ArrayObject::exchangeArray' => 'Exchange the array for another one',
        'ArrayObject::getArrayCopy' => 'Creates a copu oft the ArrayObject',
        'ArrayObject::getFlags' => 'Gets the behavior flags',
        'ArrayObject::getIterator' => 'Create a new iterator form an ArrayObject instance',
        'ArrayObject::getIteratorClass' => 'Gets the iterator clasname for the ArrayObject',
        'ArrayObject::ksort' => 'Sort the entries by key',
        'ArrayObject::natcassort' => 'Sort an array using a case insensitive "natural order" algorithm',
        'ArrayObject::natsort' => 'Sort entries using a "natural order" algorithm',
        'ArrayObject::offsetExists' => 'Returns whether the rquesterd index exists',
        'ArrayObject::offsetGet' => 'Returns the value at the specified index',
        'ArrayObject::offsetSet' => 'Sets the value at the specified index to newval',
        'ArrayObject::offsetUnset' => 'Unsets th value at the specified index',
        'ArrayObject::serialize' => 'Serialize an ArrayObject',
        'ArrayObject::setFlags' => 'Sets the behavior flags',
        'ArrayObject::setIteratorClass' => 'Set the iterator classname for the ArrayObject',
        'ArrayObject::uasort' => 'Sort the entries with a user-defined comparison function and maintain key associatin',
        'ArrayObject::uksort' => 'Sort the entries by keys using a user-defined comparison function',
        'ArrayObject::unserialize' => 'Unserialize an ArrayObject',
        'ArrayObject::__construct' => 'Construct a new array object',
        'array_change_key_case' => 'Changes the case of all keys i nan array',
        'array_chunk' => 'Split an array into chunks',
        'array_column' => 'Return the values from a single cloumn in the input array',
        'array_combine' => 'Creates an array by using one array for keys and another for tis values',
        'array_count_values' => 'Count all the values of an array',
        'array_diff' => 'Computes the difference of arrays',
        'array_diff_assoc' => 'Computes the difference of arrays with additional index check',
        'array_diff_key' => 'Computes the difference of arrays using keys for comparison',
        'array_diff_uassoc' => 'Computes the difference of arrays with additional index check which is performed by a user supplied callback function',
        'array_diff_ukey' => 'Computes difference of arrays usinf a callback function on the keys for comparison',
        'array_fill' => 'Fill an array with values',
        'array_fill_keys ' => 'Fill an array with vlaues, specifying keys',
        'array_filter' => 'Filters elements of an array using a callback function',
        'array_flip' => 'Exchanges all keys with their associated values in an array',
        'array_intersect' => 'Computes the intersection of arrays',
        'array_intersect_assoc' => 'Computes the intersection of arrays with addityional index check',
        'array_ineersect_key' => 'Computes the intersectin of arrays using keys for comparison',
        'array_intersect_uassoc' => 'Computes the intersection of arrays with additional index check, compares indexes by a callbvack function',
        'array_intersect_ukey' => 'Computes the intersection of arrays using a callback function on the keys for comparison',
        'array_is_list' => 'Check whether a given array is a list',
        'array_keys' => 'Return all the keys or a subset of the keys of an array',
        'array_key_exists' => 'Checks if the given key or index exists in the array',
        'array_key_first' => 'Gets the first key of an array',
        'array_key_last' => 'Gets the last key of an array',
        'array_map' => 'Applies the callback to the elements of the give arrays',
        'array_merge' => 'Merge one or more arrays',
        'array_merge_recursive' => 'Merge one or more arrays recursively',
        'array_multisort' => 'Sort multiple or multi-dimensional arrays',
        'array_pad' => 'Pad array to the specified length with a value',
        'array_pop' => 'Pop the element off the end of array',
        'array_product' => 'Calculate the product of values in an array',
        'array_push' => 'Push on or more elements onto the end of array',
        'array_rand' => 'Pick one or more random keys out of an array',
        'array_reduce' => 'Iteratively reduce the array to a single value using a callback function',
        'array_replace' => 'Replace elements from passed arays into the first array',
        'array_replace_recursive' => 'Replaces elements from passed arrays into the first array recursively',
        'array_reverse' => 'Return an aray withv elements in reverse order',
        'array_search' => 'Searches the array for a given valkue and returns the vfirst corrresponding key if successful',
        'array_shift' => 'Shift an elemnt off the beginning of array',
        'array_slice' => 'Extract a slice of the array',
        'array_splice' => 'Remove a portion of the array and replace it with something else',
        'array_sum' => 'Calculate the sum of values in an array',
        'array_udiff' => 'Computes the difference of arrays by using a callback function for data comparison',
        'array_udiff_assoc' => 'Computes the difference of arrays with additional index check, compares data by a callback funcrtion',
        'array_udiff_uassoc' => 'Computes the difference of arrays with additional index check, compares datra and ndexes by callvback function',
        'array_uintersect' => 'Computes the intersection of arrays, compares date by a callbvack function',
        'array_uintersect_assoc' => 'Computes the of arays witrh adsditinal index check, comopares data by a callback function',
        'array_uintersect_uassoc' => 'Computes the intersection of arrays with additional index check, compares data and indexed by separate callback functions',
        'array_unique' => 'Removes duplicate values from an array',
        'array_unshift' => 'Prepend one or more elements to the beginning of an array',
        'array_values' => 'Return all the values of an array',
        'array_walk' => 'Apply a user supplied function to evry membr of an array',
        'array_walk_revursive' => 'Apply a user function recursively to every member of an array',
        'arsort' => 'Sort an array in descending order and maintain index association',
        'asin' => 'Arc sine',
        'asinh' => 'Inverse hyperbolic sine',
        'asort' => 'Sort an array in ascending order and maintain index association',
        'assert' => 'Checks if assertion is false',
        'assert_options' => 'Set/get the various assert flags',
        'atan' => 'Arc tangent',
        'atan2' => 'Arc tangent of two variables',
        'atanh' => 'Inverse hyperbolic tangent',
    );

    public $b = array(
        'BackedEnum::from' => 'Maps a scalar to an enum instance',
        'BackedEnum::tryFrom' => 'Maps a scalar to an enum instance or null',
        'base64_decode' => 'Decodes data encoded with MIME base64',
        'base64_encode' => 'Encodes data with MIME base64',
        'basename' => 'Returns trailing name component of path',
        'BaseResult::getWatnings' => 'Fetch warning cout from last operation',
        'BaseResult::getWarningsCount' => 'Fetch warning count from last operation',
        'base_convert' => 'Convert a number between arbitrary',
        'bcadd' => 'Add two arbitrary precision numbers',
        'bccomp' => 'Compare two arbitrary precision numbers',
        'bcdiv' => 'Divide two arbitrary precision numbers',
        'bcmod' => 'Get modulus of an arbitrary precision number',
        'bcmul' => 'Multiplu two arbitrary precision numbers',
        'bcpow' => 'Raise an arbitrary precision number to another',
        'bcpowmod' => 'Raise an arbitrary prcision number to anther, reduced by a specified modulus',
        'bcscale' => 'Set or get default scale parameter for all bc math functions',
        'bcsqrt' => 'Get the square root of an arbitrary precision number',
        'bcsub' => 'Subtract one arbitrary precision number from another',
        'bin2hex' => 'Convert binary data into hxadecimal representain',
        'bindec' => 'Binary to decimal',
        'bindtextdomain' => 'Sets or gets the path for a domain',
        'bind_textdomain_codeset' => 'Specify or get the character ending in which the messags from the DOMAIN message catalgo will be returned',
        'boolval' => 'Get the boolean value of a variable',
        'bzclose' => 'Close a bzip2 file',
        'bzcompress' => 'Compress a string into bzip2 encoded data',
        'bzdecompress' => 'Decompresses bzip2 encoded data',
        'bzerrno' => 'Returns a bzip2 error number',
        'bzerror' => 'Returns the bzip2 error number and error string in an array',
        'bzerrstr' => 'Returns a bzip2 error string',
        'bzflush' => 'Do nothing',
        'bzopen' => 'Opens a bzip2 compressed file',
        'bzread' => 'Binary safe bzip2 file read',
        'bzwrite' => 'Binary safe bzip2 file write',
    );

    public $c = array(
        'CachingIterator::count' => 'The number of elements in the itrator',
        'CachingIterator::current' => 'Return the current element',
        'CachingIterator::getCache' => 'Retrieve the contents of the cache',
        'CachingIterator::getFlags' => 'Get flags used',
        'CachingIterator::getInnerIterator' => 'Returns the inner iterator',
        'CachingIterator::hasNext' => 'Check whether the  inner iterator has a valid next element',
        'CachingIterator::key' => 'Return the key for the current element',
        'CachingIterator::next' => 'Move the iterator forward',
        'CachingIterator::offsetExists' => 'The offsetExists purpose',
        'CachingIterator::offsetGet' => 'The offstGet purpose',
        'CachingIterator::offsetSet' => 'The offsetSet purpose',
        'CachingIterator::offsetUnset' => 'The offsetUnset purpose',
        'CachingIterator::rewind' => 'Rewind the iterator',
        'CachingIterator::setFlags' => 'The setFlags purpose',
        'CachingIterator::valid' => 'Check whether the current element is valid',
        'CachingIterator::__construct' => 'Construct a new CachingIterator object for the iterator',
        'CachingIterator::__toString' => 'Return the string representation of the current element',
        'CallbackFilterIterator::accept' => 'Calls the callback with the current value, the current key and the inner iterator as arguments',
        'CallbackFilterIterator::__construct' => 'Create a filtered iterator from another iterator',
        'call_user_func' => 'Call the callback given by the first parameter',
        'call_user_func_array' => 'Call a callback with an array of parameters',
        'cal_days_in_month' => 'Return the numbr of days in a month for a given year and calendar',
        'cal_from_jd' => 'Converts from Julian Day Count to a supported calendar',
        'cal_info' => 'Returns information about a particular calendar',
        'call_to_jd' => 'Converts from a supported calendar to Julian day Count',
        'ceil' => 'Round fractions up',
        'chdir' => 'Change directory',
        'checkdate' => 'Validate a Grgorian date',
        'checkdnsrr' => 'Check DNS records corresponding to a given Internet host name or IP address',
        'chgrp' => 'Changes file group',
        'chmod' => 'Changes file mode',
        'chop' => 'Alias of rtrim',
        'chown' => 'Changes file owner',
        'chr' => 'Generate a single-byt string from a number',
        'chroot' => 'Change the root directory',
        'chunk_split' => 'Split a string into smaller chunks',
        'class_alias' => 'Creates an alias for a class',
        'class_exists' => 'Checks if the calss has been defined',
        'class_implements' => 'Return the interfaces which are implemented by the given class or interface',
        'class_parents' => 'Return the parent calsses of the given class',
        'class_uses' => 'Return the traits used by the given class',
        'clearstatcache' => 'Clears file status cache',
        'Client::getClient' => 'Get client seesion',
        'Client::__construct' => 'Client constructor',
        'cli_get_process_title' => 'Returns the current process title',
        'cli_set_process_title' => 'Sets the process title',
        'closedir' => 'Close directory handle',
        'closelog' => 'Close connection to system logger',
        'Closure::bind' => 'Duplicates a closure with a specific bound object and class scope',
        'Closure::bindTo' => 'Duplicates the closure with a new bound objexct and class scope',
        'Closure::call' => 'Binds and calls the closure',
        'Closure::fromCallable' => 'Converts a callable into a closure',
        'Closure::__construct' => 'Constructor that disallows instantiation',
        'Collator::asort' => 'Sort array maintaining index association',
        'Collator::compare' => 'Compare two Unicode strings',
        'Collator::create' => 'Create a collator',
        'Collator::getAttribute' => 'Get collation attribute value',
        'Collator::getErrorCode' => "Get collator's last error code",
        'Collator::getErrorMessage' => "Get text for collator's laste error code",
        'Collator::getLocale' => 'Get the locale name of the collator',
        'Collator::getSortKey' => 'Get sorting key for a string',
        'Collator::getStrength' => 'Get current collation strength',
        'Collator::getAttribute' => 'Set collation attribute',
        'Collator::setStrength' => 'Set collation strength',
        'Collator::sort' => 'Sort array using specified collator',
        'Collator::sortWithSortKeys' => 'Sort array using specified collator and sort keys',
        'Collator::__construct' => 'Create a collator',
        'Collectable::isGarbage' => 'Determine whether an object has been marked as garbage',
        'Collection::add' => 'Add collection document',
        'Collection::addOrReplaceOne' => 'Add or replace collection document',
        'Collection::count' => 'Get document count',
        'Collection::createIndex' => 'Create collection index',
        'Collection::dropIndex' => 'Drop collection index',
        'Collection::existsInDatabase' => 'Check if collection exists fin database',
        'Collection::find' => 'Search for document',
        'Collection::getName' => 'Get collection name',
        'Collection::getOne' => 'Get one document',
        'Collection::getSchema' => 'Get schema object',
        'Collection::getSession' => 'Get session object',
        'Collection::modify' => 'Modify collection documents',
        'Collection::remove' => 'Remove collection documents',
        'Collection::removeOne' => 'Remove collection document',
        'Collection::replaceOne' => 'Rplace one collectin document',
        'Collection::__construct' => 'Collention constructor',
        'CollectionAdd::execute' => 'Execute the statement',
        'CollectionAdd::__construct' => 'CollectionAdd constructor',
        'CollectionFind::bind' => 'Bind value to query placeholder',
        'CollectionFind::execute' => 'Execute the statement',
        'CollectionFind::fields' => 'Set document field filter',
        'CollectionFind::groupBy' => 'Set grouping criteria',
        'CollectionFind::having' => 'Set condition for aggregate functions',
        'CollectionFind::limit' => 'Limit number of returned documents',
        'CollectionFind::lockExclusive' => 'Execute operation with EXCLUSIVE LOCK',
        'CollectionFind::locakShared' => 'Execute operation with SHARED LOCK',
        'CollectionFind::offset' => 'Skip given number of elements to be returned',
        'CollectionFind::sort' => 'Set the sorting criteria',
        'CollectionFind::__construct' => 'CollectionFind constrcutor',
        'CollectionModify::arrayAppend' => 'Append element to an array field',
        'CollectionModify::arrayInsert' => 'Insert element into an array field',
        'CollectionModify::bind' => 'Bind value to query placeholder',
        'CollectionModify::execute' => 'Execute modify operation',
        'CollectionModify::limit' => 'Limit number of modified documents',
        'CollectionModidy::patch' => 'Patch document',
        'CollectionModify::repalce' => 'Replace document field',
        'CollectionModify::set' => 'Set document attribute',
        'CollectionModify::skip' => 'Skip elements',
        'CollectionModify::sort' => 'Set the sorting criteria',
        'CollectionModify::unset' => 'Unset the value of document fields',
        'CollectionModify::__constrcut' => 'CollectionModify constructor',
        'CollectionRemove::bind' => 'Bind value to placeholder',
        'CollectionRemove::execute' => 'Execute remore operation',
        'CollectionRemove::limit' => 'Limit number of documents to remove',
        'CollectionRemove::sort' => 'Set the sorting criteria',
        'CollectionRemove::__construct' => 'CollectionRemove constructor',
        'ColumnResult::getCharacterSetName' => 'Get character set',
        'ColumnResult::getCollationName' => 'Get collation name',
        'ColumnResult::getColumnLabel' => 'Get column label',
        'ColumnResult::getColumnName' => 'Get column name',
        'ColumnResult::getFractionalDigits' => 'Get fractional digit length',
        'ColumnResult::getLength' => 'Get column field length',
        'ColumnResult::getSchemaName' => 'Get table label',
        'ColumnResult::getTableLabel' => 'Get table label',
        'ColumnResult::getTableName' => 'Get table name',
        'ColumnResult::getType' => 'Get column type',
        'ColumnResult::isNumberSigned' => 'Check if signed type',
        'ColumnResult::isPadded' => 'Check if padded',
        'ColumnResult::__constrcut' => 'ColumnResult constructor',
        'com::__construct' => 'com class constr',
        'CommonMark\CQL::__construct' => 'CQL Construction',
        'CommonMark\CQL::__invoke' => 'CQL Execution',
        'CommonMark\Interfaces\IVistable::accpet' => 'Visitation',
        'CommonMark\Interfaces\IVistor::enter' => 'Visitation',
        'CommonMark\Interfaces\IVistor::leave' => 'Visitation',
        'CommonMark\Node::accept' => 'Visitation',
        'CommonMark\Node::appendChild' => 'AST Manipulation',
        'CommonMark\Node::insertAfter' => 'AST Manipulation',
        'CommonMark\Node::insertBefore' => 'AST Manipulation',
        'CommonMark\Node::prependChild' => 'AST Manipulation',
        'CommonMark\Node::replace' => 'AST Manipulation',
        'CommonMark\Node::unlink' => 'AST Manipulation',
        'CommonMark\Node\BulletList::__construct' => 'BulletList Construction',
        'CommonMark\Node\CodeBlock::__construct' => 'CodeBlock Construction',
        'CommonMark\Node\Heading::__construct' => 'Heading Construction',
        'CommonMark\Node\Image::__construct' => 'Image Construction',
        'CommonMark\Node\Link::__construct' => 'Link Construction',
        'CommonMark\Node\OrderedList::__construct' => 'OrderedList Construction',
        'CommonMark\Node\Text::__construct' => 'Text Construction',
        'CommonMark\Parse' => 'Parsing',
        'CommonMark\Parser::finish' => 'Parsing',
        'CommonMark\Parser::parse' => 'Parsing',
        'CommonMark\Parser::__construct' => 'Parsing',
        'CommonMark\Render' => 'Rendering',
        'CommonMark\Render\HTML' => 'Rendering',
        'CommonMark\Render\Latex' => 'Rendering',
        'CommonMark\Render\Man' => 'Rendering',
        'CommonMark\Render\XML' => 'Rendering',
        'compact -Crate array containing variables and their values',
        'COMPersisHelper::GetCurFileName' => 'Get current filename',
        'COMPersisHelper::GetMaxStreamSize' => 'Get maximum stream size',
        'COMPersisHelper::InitNew' => 'Initialize object to default state',
        'COMPersisHelper::LoadFromFile' => 'Load object from file',
        'COMPersisHelper::LoadFromStream' => 'Load object from stream',
        'COMPersisHelper::SaveToFile' => 'Save object to file',
        'COMPersisHelper::SaveToStream' => 'Save object to stream',
        'COMPersisHelper::__construct' => 'Construct a COMPersisHelper object',
        'Componere\Abstract\Definition::addInterface' => 'Add Interface',
        'Componere\Abstract\Definition::addMethod' => 'Add Method',
        'Componere\Abstract\Definition::addTrait' => 'Add Trait',
        'Componere\Abstract\Definition::getReflector' => 'Reflection',
        'Componere\cast' => 'Casting',
        'Componere\cast_by_ref' => 'Casting',
        'Componere\Definition::addConstant' => 'Add Constant',
        'Componere\Definition::addProperty' => 'Add Property',
        'Componere\Definition::getClosure' => 'Get Closure',
        'Componere\Definition::getClosures' => 'Get Closures',
        'Componere\Definition::isRegistered' => 'State Detection',
        'Componere\Definition::register' => 'Registration',
        'Componere\Definition::__construct' => 'Definition Construction',
        'Componere\Method::getReflector' => 'Relection',
        'Componere\Method::setPrivate' => 'Accessibility Modification',
        'Componere\Method::setProtected' => 'Accessibility Modification',
        'Componere\Method::setStatic' => 'Accessibility Modificatiion',
        'Componere\Method::__constrcut' => 'Method Construction',
        'Componere\Patch::apply' => 'Application',
        'Componere\Patch::derive' => 'Patch Derivation',
        'Componere\Patch::getClosure' => 'Get Closure',
        'Componere\Patch::getClosures' => 'Get Closures',
        'Componere\Patch::isApplied' => 'State Detection',
        'Componere\Patch::revert' => 'Reversal',
        'Componere\Patch::__construct' => 'Patch Construction',
        'Componere\Value::hasDefault' => 'Value Interaction',
        'Componere\Value::isPrivate' => 'Accessibility Detection',
        'Componere\Value::isProtected' => 'Accessibility Detection',
        'Componere\Value::isStatic' => 'Accessibility Detection',
        'Componere\Value::setPrivate' => 'Accessibility Modification',
        'Componere\Value::setPrortected' => 'Accessibility Modification',
        'Componere\Value::setStatic' => 'Accessibility Modification',
        'Componere\Value::__construct' => 'Value Construction',
        'com_create_guid' => 'Generate a globally unique identifier (GUID)',
        'com_event_sink' => 'Connect events from a COM object to a PHP object',
        'com_get_active_object' => 'Returns a handle to an already runing instance of a COM object',
        'com_load_typelib' => 'Loads a Typelib',
        'com_message_pump' => 'Process COM messages, sleeping for up to timeoutms milliseconds',
        'com_print_typeinfo' => 'Print out a PHP class definition for a dispathcable interface',
        'connection_aborted' => 'Check whether client disconnected',
        'connection_stauts' => 'Returns connection staus bitfield',
        'constant' => 'Returns the valus of a constant',
        'Context parameters' => 'Context parameter listing',
        'convert_cyr_string' => 'Convert from one Cyrillic character set to another',
        'convert_uudecode' => 'Decode a uuencoded string',
        'convert_uuencode' => 'Uuencode a string',
        'copy' => 'Copies file',
        'cos' => 'Cosine',
        'cosh' => 'Hyperbolic cosine',
        'count' => 'Counts all elements in an array or in a Countable object',
        'Countable::count' => 'Count elements of an object',
        'count_charts' => 'Return information about characters used in a string',
        'crc32' => 'Calculates the crc32 polynomial of a string',
        'create_function' => 'Create an anonymous (lambda-style) function',
        'CrudOperationBindable::bind' => 'Bind value to placeholder',
        'CrudOperationLimitable::limit' => 'Set result limit',
        'CrudOperationSkippable::skip' => 'Number of operations to skip',
        'CrudOperationSortable::sort' => 'Sort results',
        'crypt' => 'One-way string hashing',
        'ctype_alnum' => 'Check for alphanumeric character(s)',
        'ctype_alpha' => 'Check for alphabetic character(s)',
        'ctype_cntrl' => 'Check for control character(s)',
        'ctype_digit' => 'Check for numeric character(s)',
        'ctype_graph' => 'Check for any printable character(s) excepot space',
        'ctype_lower' => 'Check for lowercase character(s)',
        'ctype_print' => 'Check for printable character(s)',
        'ctype_punct' => 'Check for any printable character which is not whitespace or an alphanu,eric chartacter',
        'ctype_space' => 'Check for whitespace character(s)',
        'ctype_upper' => 'Check for uppercase character(s)',
        'ctype_xdigit' => 'Check for charactor(s) representing a hexadecimal digit',
        'cubrid_affected_rows' => 'Return the number of rows affected by the last SQL statement',
        'cubrid_bind' => 'Bind variables to a prepared statement as parameters',
        'cubrid_client_encoding' => 'Return the current CUBRID connection charset',
        'cubrid_close' => 'Close CUBRID connection',
        'cubrid_close_prepare' => 'Close the request handle',
        'cubrid_close_request' => 'Close the request handle',
        'cubrid_column_names' => 'Get the column names in result',
        'cubrid_column_types -Get column types in result',
        'cubrid_col_get' => 'Get contents of collection type column using OID',
        'cubrid_col_size' => 'Get the numb er of elements in collection typoe column using OID',
        'cubrid_commit' => 'Commit a transaction',
        'cubrid_connect' => 'Open a connection to a CUBRID Server',
        'cubrid_connect_with_url' => 'Establish the environment for connnecting to CUBRID server',
        'cubrid_current_oid' => 'Get OID of the current cursor location',
        'cubrid_data_seek' => 'Move the internal row pointer of the CUBRID result',
        'cubrid_db_name' => 'Get db name from results of cubrid_list_db',
        'cubrid_disconnect' => 'Close a database connection',
        'cubrid_drop' => 'Delete an instance using OID',
        'cubrid_errno' => 'Return the numeerical value of the error message form prvious CUBRID operation',
        'cubrid_error' => 'Get the error message',
        'cubrid_error_code' => 'Get error code for the most recent function call',
        'cubrid_error_code_facility' => 'Get the facility code of error',
        'cubrid_error_msg' => 'Get last error message for the most rcent function call',
        'cubrid_execute' => 'Execute a prepared SQL statement',
        'cubrid_fetch' => 'Fetch the next row from a result set',
        'cubrid_fetch_array' => 'Fetch a result row as an associative array, a numeric array, or both',
        'cubrid_fetch_assoc' => 'Return the associativev array that corresponds to th fetched row',
        'cubrid_fetch_field' => 'Get column information from a rsult and rturn as an object',
        'cubrid_fetch_lengths' => 'Return an array with the lengths of the values of each field from the curent row',
        'cubrid_fetch_object' => 'Fetch the next row and return it as an object',
        'cubrid_fetch_row' => 'Return a numerical array with the values of the current row',
        'cubrid_fetch_flags' => 'Return a string with the flags of the given field offset',
        'cubrid_field_len' => 'Get the maximum length of the specified field',
        'cubrid_field_name' => 'Return the name of the specified field index',
        'cubrid_field_seek' => 'Move the result set cursor to th specifid field',
        'cubrid_field_table' => 'Return the name of the table of the specified field',
        'cubrid_field_type' => 'Return the type of the column corresponding to the five field offset',
        'cubrid_free_result' => 'Free the memory occupied by the result data',
        'cubrid_get' => 'Get a column using OID',
        'cubrid_get_autocommit' => 'Get auto-commit mode of the connection',
        'cubrid_get_charset' => 'Return the current CUBRID connection charset',
        'cubrid_get_class_name' => 'Get the class name using OID',
        'cubrid_get_client_info' => 'Return the client library version',
        'cubrid_get_db_parameter' => 'Returns the CUBRID server version',
        'cubrid_get_query_timeout' => 'Get the query tiemout vvalue of the request',
        'cubrid_get_server_info' => 'Return the vCUBRID server version',
        'cubrid_insert_id' => 'Return the ID generated for the last updated AUTO_INCREMENT column',
        'cubrid_is_instance' => 'Check whether the instance pointed by OID exists',
        'cubrid_list_dbs' => 'Return an array with the list of all existing CUBRID databases',
        'cubrid_load_from_glo' => 'Read data from a GLO instance and save it in a file',
        'cubrid_lob2_bind' => 'Bind a lob object or a string as a lob object to a prepard statement as parameters',
        'cubrid_lob2_close' => 'Close LOB object',
        'cubrid_lob2_export' => 'Export the lob object to a file',
        'cubrid_lob2_import' => 'Import BLOB/CLOB data from a file',
        'cubrid_lob2_new' => 'Create a lob object',
        'cubrid_lob2_read' => 'Read from BLOB/CLOB data',
        'cubrid_lob2_seek' => 'Move the cursor of a lob object',
        'cubrid_lob2_seek64' => 'Move the cursor of a lob object',
        'cubrid_lob2_size' => "Get a lob object's size",
        'cubrid_lob2_size64' => "Get a lob object's size",
        'cubrid_lob2_tell' => 'Tell the cursor position of the LOB object',
        'cubrid_lob2_tell64' => 'Tell the cursor position of the LOB object',
        'cubrid_lob2_write' => 'Write to a lob object',
        'cubrid_lob_close' => 'Close BLOB/CLOB data',
        'cubrid_lob_export' => 'Export BLOB/CLOB data to file',
        'cubrid_lob_get' => 'Get BLOB/CLOB data',
        'cubrid_lob_send' => 'Read BLOB/CLOB data and send straight to browser',
        'cubrid_lob_size' => 'Get BLOB/CLOB data size',
        'cubrid_lock_read' => 'Set a read lock on the given OID',
        'cubrid_lock_write' => 'Set a write lock on the given OID',
        'cubrid_move_cursor' => 'Move the cursor in the result',
        'cubrid_new_glo' => 'Create a glo instance',
        'cubrid_next_result' => 'Get result of next query when exectuing multiple SQL statements',
        'cubrid_num_cols' => 'Return the number of columns in the result set',
        'cubrid_num_fields' => 'Return number of rows in the result set',
        'cubrid_num_rows' => 'Get the number of rows in the result set',
        'cubrid_pconnect' => 'Open a persistent connection to CUBRID server',
        'cubrid_pconnect_with_url' => 'Open a persistent connection to CUBRID server',
        'cubrid_ping' => 'Ping a server connection or or reconnect if there is no connection',
        'cubrid_prepare' => 'Prepare a SQL statement for execution',
        'cubrid_put' => 'Update a column using OID',
        'cubrid_query' => 'Send a CUBRID query',
        'cubrid_real_escape_string' => 'Escape special characters in a string for use in an SQL statement',
        'cubrid_result' => 'Return the value of a specific field in a specific row',
        'cubrid_rollback' => 'Roll back a transaction',
        'cubrid_save_to_go' => 'Save requested file in a GLO instance',
        'cubrid_schema' => 'Get the requested schema information',
        'cubrid_send_glo' => 'Read data from glo and send it to std ouput',
        'cubrid_seq_drop' => 'Delete an element from sequence typoe clumn using OID',
        'cubrid_seq_insert' => 'Insert an element to a sequence type column using OID',
        'cubrid_seq_put' => 'Update the element value of sequence type column using OID',
        'cubrid_set_add' => 'Insert a single element to set type column using OID',
        'cubrid_set_autocommit' => 'Set autocommit mode of the connection',
        'cubrid_set_db_parameter' => 'Sets the CUBRID database parameters',
        'cubrid_set_drop' => 'Delete an element from set type column using OID',
        'cubrid_set_query_timeout' => 'Set the timeout time of query execution',
        'cubrid_unbuffered_query' => 'Perform a query without fetching the rsults into memory',
        'cubrid_version' => "Get the CUBRID PHP module's version",
        'CURL context options' => 'CURL context option listing',
        'CURLFile::getFilename' => 'Get file name',
        'CURLFile::getMimeType' => 'Get MIME type',
        'CURLFile::getPostFilename' => 'Get file name for POST',
        'CURLFile::setMimeType' => 'Set MIME type',
        'CURLFile::setPostFilename' => 'Set file name for POST',
        'CURLFile::__construct' => 'Create a CURLFile object',
        'CURLStringFile::__construct' => 'Create a CURLStringFile object',
        'curl_close' => 'Close a cURL session',
        'curl_copy_handle' => 'Copy a cURL handle alongv with all of its preferences',
        'curl_errno' => 'Return the last error number',
        'curl_error' => 'Return a string containing the last error for the current session',
        'curl_escape' => 'URL encodes the given string',
        'curl_exec' => 'Perform a cURL session',
        'curl_getinfo' => 'Get information regarding a specific transfer',
        'curl_init' => 'Initialize acURL session',
        'curl_multi_add_handle' => 'Add a normal cURL handle to a cURL multi handle',
        'curl_multi_close' => 'Close a set of cURL handles',
        'curl_multi_errno' => 'Return the last multi curl error number',
        'curl_multi_exec' => 'Run the sub-connections of the current cURL handle',
        'curl_multi_getcontent' => 'Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set',
        'curl_multi_info_read' => 'Get information about the current transfers',
        'curl_multi_init' => 'Returns a new vcURL multi handle',
        'curl_multi_remove_handle' => 'Remove a multi handle from a set of cURL handles',
        'curl_multi_select' => 'Wait for acrtivity on any curl_nulti connection',
        'curl_multi_setopt' => 'Set an option for the cURL multi handle',
        'curl_multi_strerror' => 'Return string describing error code',
        'curl_pause' => 'Pause and unpause a connection',
        'curl_reset' => 'Reset all options of a libcurl session handle',
        'curl_setopt' => 'Set an option for a cURL transfer',
        'curl_setopt_array' => 'Set multiple options for a cURL transfer',
        'curl_share_close' => 'Close a cURL sharev handle',
        'curl_share_errno' => 'Return the last share curl error number',
        'curl_share_init' => 'Initialize a cURL share handle',
        'curl_share_setopt' => 'Set an option for a cURL share handle',
        'curl_share_strerror' => 'Return string describing the given error code',
        'curl_strerror' => 'Return string describing the given error code',
        'curl_unescape' => 'Decodes the given URL encoded string',
        'curl_version' => 'Gets cURL version information',
        'current' => 'Return the currnt element in an array',
    );

    public $d = array(
        'data://' => 'Data (RFC 2397)',
        'DatabaseObject::existsInDatabase' => 'Check if object exits in database',
        'DatabaseObject::getName' => 'Get object name',
        'DatabaseObject::getSession' => 'Get session name',
        'date' => 'Format a local time/date',
        'DateInterval::createFromDateString' => 'Sets up a DateInterval from the relative parts of the string',
        'DateInterval::format' => 'Formats the interval',
        'DateInterval::__construct' => 'Creates a new DateInterval object',
        'DatePeriod::getDateInterval' => 'Gets the interval',
        'DatePeriod::getEndDate' => 'Gets the end date',
        'DatePeriod::getRecurrences' => 'Gets the number of recurrences',
        'DatePeriod::getStartDate' => 'Gets the start date',
        'DatePeriod::__construct' => 'Creates a new DatePeriod object',
        'DateTime::add' => 'Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object',
        'DateTime::createFromFormat' => 'Parses a time string according to a specified format',
        'DateTime::createFromImmutable' => 'Returns new DateTime object encapsulating the given DateTimeImmutable object',
        'DateTime::createFromInterface' => 'Returns new DateTime object encapsulating the given DateTimeInterface object',
        'DateTime::diff' => 'Returns th difference between two DateTime obejcts',
        'DateTime::format' => 'Returns date formatted accordingf to given format',
        'DateTime::getLastErrors' => 'Returns the warnings and errors',
        'DateTime::getOffset' => 'Returns the timezone offset',
        'DateTime::getTimestamp' => 'Gets the Unix timestamp',
        'DateTime::getTimezone' => 'Return time zone relative to given DateTime',
        'DateTime::modify' => 'Alters the timestamp',
        'DateTime::setDate' => 'Sets the date',
        'DateTime::setISODate' => 'Sets the ISO date',
        'DateTime::setTime' => 'Sets the time',
        'DateTime::setTimestamp' => 'Sets the date and time based on an Unix timestamp',
        'DateTime::setTimezone' => 'Sets the time zone for the DateTime object',
        'DateTime::sub' => 'Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object',
        'DateTime::__construct' => 'Returns new DateTime object',
        'DateTime::__set_state' => 'The  __set_state handler',
        'DateTime::__wakeup' => 'The __wakeup handler',
        'DateTimeImmutable::add' => 'Adds an amount of days, months, years, hours, minutes and seconds',
        'DateTimeImmutable::createFromFormat' => 'Pares a time string accrding to a specified format',
        'DateTimeImmutable::createFromInterface' => 'Returns new DateTimeImmutable object encapsulatin the given DateTimeInterface object',
        'DateTimeImmutable::createFromMutable' => 'Returns new DateTimeImmutable object encapsulating the given DateTime object',
        'DateTimeImmutable::getLastErrors' => 'Returns the warnings and errors',
        'DateTimeImmutable::modify' => 'Creates a new object with modified timestamp',
        'DateTimeImmutable::setDate' => 'Sets the date',
        'DateTimeImmutable::setISODate' => 'Sets the ISO date',
        'DateTimeImmutable::setTime' => 'Sets the ISO date',
        'DateTimeImmutable::setTimestamp' => 'Sets the date and time based on a Unix timestamp',
        'DateTimeImmutable::setTimezone' => 'Sets the time zone',
        'DateTimeImmutable::sub' => 'Subtracts an amount of days, months, years, hours, minutes and seconds',
        'DateTimeImmutable::__construct' => 'Returns new DateTimeImmutable object',
        'DateTimeImmutable::__set_state' => 'The __set_state handler',
        'DateTimeZone::getLocation' => 'Returns location information for a timezone',
        'DateTimeZone::getName' => 'Returns the name of the timezone',
        'DateTimeZone::getOffset' => 'Returns the timezone offset from GMT',
        'DateTimeZone::getTransitions' => 'Returns all transitions for the timezone',
        'DateTimeZone::listAbbreviations' => 'Returns associativev array containing dst, offset and the timezone name',
        'DateTimeZone::listIdentifers' => 'Returns a numerically indexed array containing all defined timezone identifiers',
        'DateTimeZone::__construct' => 'Creates new DateTimeZone object',
        'date_add' => 'Alias of DateTime::add',
        'date_create' => 'Alias of DateTimeLL__construct',
        'date_create_from_format' => 'Alias of DateTime::createFromFormat',
        'date_create_immutable' => 'Alias of DateTimeImmutable::__construct',
        'date_create_immutable_from_format' => 'Alias of DateTimeImmutable::crateFromFormat',
        'date_date_set' => 'Alias of DateTime::setDate',
        'date_default_timezone_get' => 'Gets the default timezone used by all date/time functions in a script',
        'date_default_timezoneset' => 'Sets the default timezone used by all date/time functions in a script',
        'date_diff' => 'Alias of DateTime::diff',
        'date_format' => 'Alias of DatTime::format',
        'date_get_last_errors' => 'Alias of DateTime::getLastErrors',
        'date_interval_create_from_date_string' => 'Alias of DateInterval::createFromDateString',
        'date_interval_format' => 'Alias of DateInterval::format',
        'date_isodate_set' => 'Alias of DateTime::setISODate',
        'date_modify' => 'Alias of DateTime::modify',
        'date_offset_get' => 'Alias of DateTime::getOffset',
        'date_parse' => 'Returns associative array with detailed info about given date/time',
        'date_parse_from_format' => 'Get info about given date formatted according to the specified format',
        'date_sub' => 'Alias of DateTime::sub',
        'date_sunrise' => 'Returns time of sunrise for a given day and location',
        'date_sunset' => 'Returns time of sunset for a given day and location',
        'date_sun_info' => 'Returns an array with information about sunset/sunrise and twilight begin/end',
        'date_timestamp_get' => 'Alias of DateTime::getTimestamp',
        'date_timestamp_set' => 'Alias of DateTime::setTimestamp',
        'date_timezone_get' => 'Alias of DateTime::getTimezone',
        'date_timezone_set' => 'Alias of DateTime::setTimezone',
        'date_time_set' => 'Alias of DateTime::setTime',
        'db2_autocommit' => 'Returns or sets the A/UTOCOMMIT sat for a database connection',
        'db2_bind_param' => 'Binds a PHP vaiable to an SQL statrement parameter',
        'db2_clinet_info' => 'Returns an object with properties that describe the DB2 database client',
        'db2_close' => 'Closes a database connection',
        'db2_columns' => 'Returns a result set listing the columns and associated metadata for a table',
        'db2_column_privileges' => 'Returns a result set listing the columns and associated metadata for a table',
        'db2_commit' => 'Commits a transaction',
        'db2_connect' => 'Returns a connection to a database',
        'db2_conn_error' => 'Returns a string containing the SQLSTATE returned by the last connection attempt',
        'db2_conn_errormsg' => 'Returns the last connection error message and SQLCODE value',
        'db2_cursor_type' => 'Returns the cursor used by a statement resource',
        'db2_escape_string' => 'Used to escape certain characters',
        'db2_exec' => 'Executes an SQL statement directly',
        'db2_execute' => 'Executes a prepared SQL statement',
        'db2_fetch_array' => 'Returns an array, indexed by column position, representing a row in a result set',
        'db2_fetch_assoc' => 'Returns an array, indexed by column name, representing a row in a result set',
        'db2_fetch_both' => 'Returns an array, indexed by both column name and postition, representing a row in a result set',
        'db2_fetch_object' => 'Returns an object with propertis representing columns in the fetched row',
        'db2_fetch_row' => 'Sets the rsult set pointer to the next rtow or requested row',
        'db2_field_display_size' => 'Returns the maximum number of bytes required to display a column',
        'db2_field_name' => 'Returns the name of the column in the result set',
        'db2_field_num' => 'Returns the position of the named column in a result set',
        'db2_field_precision' => 'Returns the percision of the indicated column in a result set',
        'db2_field_scale' => 'Returns the scale of the indicated column in a result set',
        'db2_field_type' => 'Returns the data type of the indicated column in a result set',
        'db2_field_width' => 'Returns the width of the current value of the indicated column in a result set',
        'db2_foreign_keys' => 'Returns a result set listing the foreign keys for a table',
        'db2_free_result' => 'Frees resources associated with a result set',
        'db2_free_stmt' => 'Frees resources associated with the indicated statement resource',
        'db2_get_option' => 'Retrieves an option value for a statement resource or a connection resource',
        'db2_last_insert_id' => 'Returns the auto generated ID of the last insert query that successfully executed on this connection',
        'db2_lob_read' => 'Gts a user defined size of LOB files with each invocation',
        'db2_next_result' => 'Requests the next result set from a stored procedcure',
        'db2_num_fields' => 'Returns the number of fields contained in a result set',
        'db2_num_rows' => 'Returns the number of rows affexcted by an SQL statement',
        'db2_pclose' => 'Closes a persistent database connection',
        'db2_pconnect' => 'Returns a persistent connection to a database',
        'db2_prepare' => 'Prepares an SQL statement to be executed',
        'db2_primary_keys' => 'Returns a result set listing primary keys for a table',
        'db2_procedures' => 'Returns a result set listing the stored procedures registerd in a database',
        'db2_procedure_columns' => 'Returns a result set listing the stored procedures registered in a database',
        'db2_result' => 'Returns a single column from a row n the result set',
        'db2_rollback' => 'Rolls back a transaction',
        'db2_server_info' => 'Returns an object with propreties thar dscribe the DB2 database server',
        'db2_set_option' => 'Set options for connection or statement resources',
        'db2_special_columns' => 'Returns a result set listing the unique row identifier columns for a table',
        'db2_statistics' => 'Returns a result set listing the index and statistics for a table',
        'db2_stmt_error' => 'Returns a string containing the SQLSTATE rturned by an SQL statement',
        'db2_stmt_errormsg' => 'Returns a string containng the last SQL statement error message',
        'db2_tables' => 'Returns a result set listing the tables and associated metadate in a database',
        'db2_table_privileges' => 'Returns a result set listing the tables and associated privileges in a database',
        'dbase_add_record' => 'Adds a record to a database',
        'dbase_close' => 'Closes a database',
        'dbase_create' => 'Creates a database',
        'dbase_delete_record' => 'Deletes a record from a database',
        'dbase_get_header_info' => 'Gets the header info of a database',
        'dbase_get_record' => 'Gets a record from a database as an indexed array',
        'dbase_get_record_with_names' => 'Gets a record from a database as an associative array',
        'dbase_numfields' => 'Gets the number of fields of a database',
        'dbase_numrecords' => 'Gets the number of records in a database',
        'dbase_open' => 'Opens a database',
        'dbase_pack' => 'Packs a database',
        'dbase_replace_record' => 'Replaces a record in a database',
        'dba_close' => 'Close a DBA database',
        'dba_delete' => 'Delete DBA entry specified by key',
        'dba_exists' => 'Check whethr key exists',
        'dba_fetch' => 'Fetch data specified by key',
        'dba_firstkey' => 'Fetch first key',
        'dba_handlers' => 'List all the handlers available',
        'dba_insert' => 'Insert entry',
        'dba_key_split' => 'Splits a key in string representation into array representation',
        'dba_list' => 'List all open database files',
        'dba_nextkey' => 'Fetch next key',
        'dba_open' => 'Open database',
        'dba_optimize' => 'Optimize database',
        'dba_popen' => 'Open database persistently',
        'dba_replace' => 'Replace or insert entry',
        'dba_sync' => 'Synchronize database',
        'dcgettext' => 'Overrides the domain for a single lookupOverrides the domain for a single lookup',
        'dcngettext' => 'Plural version of dcgettext',
        'debug_backtrace' => 'Generates a backtrace',
        'debug_print_backtrace' => 'Prints a backtrace',
        'debug_zval_dump' => 'Dumps a string rpresentration of an internal zval structure to ouput',
        'decbin' => 'Decimal to binary',
        'dechex' => 'Decimal to hexadecimal',
        'decoct' => 'Deciaml to octal',
        'define' => 'Defines a named constant',
        'defiend' => 'Checks whether a given named constant exists',
        'deflate_add' => 'Incrementally deflate data',
        'deflate_init' => 'Initialize an incremental deflate context',
        'deg2rad' => 'Converts the number in degrees to the radian equivalent',
        'delete' => 'See unlink or unset',
        'dgettext' => 'Override the current domain',
        'die' => 'Equivalent to exit',
        'dio_close' => 'Closes the file descriptor given by fd',
        'dio_fcntl' => 'Preforms a c library fcntl',
        'dio_open' => 'Opens a file (creating it if necessary) at a lower level than the C library input/ouput stream functions allow',
        'dio_read' => 'Reads bytes from a file desciptor',
        'dio_seek' => 'Seeks to pos on fd from whence',
        'dio_stat' => 'Gets stat information about the file dsciptor fd',
        'dio_tcsetattr' => 'Sets terminal attributes and baud rate for a serial port',
        'dio_truncate' => 'Truncates file descriptor fd to offset bytes',
        'dio_write' => 'Writes data to fd with optional truncation at length',
        'dir' => 'Return an instance of the Directory class',
        'Directory::close' => 'Close directory handle',
        'Directory::read' => 'Read entry from directory handle',
        'Directory::rewind' => 'Rewind directory handle',
        'DirectoryIterator::current' => 'Return the current DirectoryIterator item',
        'DirectoryIterator::getATime' => 'Get last access time of the current DirectoryIterator item',
        'DirectoryIterator::getBasename' => 'Get base name of current DirectoryIterator item',
        'DirectoryIterator::CTime' => 'Get inode change time of the current DirectoryIterator item',
        'DirectoryIterator::getExtension' => 'Get the file extension',
        'DirectoryIterator::getFilename' => 'Return file name of current DirectoryIterator item',
        'DirectoryIterator::getGroup' => 'Get group for the current DirectoryIterator item',
        'DirectoryIterator::getInode' => 'Get indode for the current DirectoryIterator item',
        'DirectoryIterator::getMTime' => 'Get last modification time of current  DirectoryIterator item',
        'DirectoryIterator::getOwner' => 'Get owner of current DirectoryIterator item',
        'DirectoryIterator::getPath' => 'Get path of current Iterator item without filename',
        'DirecotryIterator::getPathname' => 'Get path and file name of current DirectoryIterator item',
        'DirecotryIterator::getPerms' => 'Get the permissions of current DirectoryIterator item',
        'DirecotryIterator::getSize' => 'Get size of current DirecotryIterator item',
        'DirecotryIterator::getType' => 'Determine the type of the current DirecotryIterator item',
        'DirecotryIterator::isDir' => 'Determine if current DirectoryIterator item is a directory',
        'DirecotryIterator::isDot' => 'Determine if current DirectoryItreator item is '.' or '..'',
        'DirectoryIterator::isExecutable' => 'Determine if current DirectoryIterator item is executable',
        'DirectoryIterator::isFile' => 'Determine if current DirectoryIterator item is a regular file',
        'DirectoryIterator::isLink' => 'Determine if current DirectoryIterator item is a symbolic link',
        'DirectoryIterator::isReadable' => 'Determine if current DirectoryIterator item can be read',
        'DirectoryIterator::isWritable' => 'Determine if current DirectoryIterator item can be written to',
        'DirectoryIterator::key' => 'Return the key for the current DirectoryIterator item',
        'DirectoryIterator::next' => 'Move forward to next DirecotoryIterator item',
        'DirectoryIterator::rewind' => 'Rewind the DirectoryIterator back to the start',
        'DirectoryIterator::seek' => 'Seek to a DirectoryIterator item',
        'DirectoryIterator::valid' => 'Check whether current DirectoryIterator position is a valid file',
        'DirectoryIterator::__construct' => 'Constructs a new directory iterator from a path',
        'DirectoryIterator::__toString' => 'Get file name as a string',
        'dirname' => "Returns a parent directory's path",
        'diskfreespace' => 'Alias of disk_free_space',
        'disk_free_space' => 'Returns available space on filesystem or disk partition',
        'disk_total_space' => 'Returns the total size of a filesystem or disk partition',
        'dl' => 'Loads a PHP extension at runtime',
        'dngettext' => 'Plural version of dgettext',
        'dns_check_record' => 'Alias of getmxrr',
        'dns_get_mx' => 'Alias of getmxrr',
        'dns_get_record' => 'Fetch DNS Resource Records associated with a hostname',
        'DocResult::fetchAll' => 'Get all rows',
        'DocResult::fetchOne' => 'Get one row',
        'DocResult::getWarnings' => 'Get warnings from last operation',
        'DocResult::getWarningsCount' => 'Get warning count from last operation',
        'DocResult::__construct' => 'DocResult constructor',
        'DOMAttr::isId' => 'Checks if attribute is a defined ID',
        'DOMAttr::__construct' => 'Creates a new DOMAttr object',
        'DOMCdataSection::__cnstruct' => 'Constructs a new DOMCdataSection object',
        'DOMCharacterData::appendData' => 'Append the string to the end of the character data of the node',
        'DOMCharacterData::deleteData' => 'Remove a range of characters from the node',
        'DOMCharacterData::insertData' => 'Insert a string at the specified 16-bit unit offset',
        'DOMCharacterData::replaceData' => 'Replace a substring within the DOMCharacterData node',
        'DOMCharacterData::substringData' => 'Extracts a range of data from the node',
        'DOMChildNode::after' => 'Adds nodes after the node',
        'DOMChildNode::before' => 'Adds nodes before the node',
        'DOMChildNode::remove' => 'Removes the node',
        'DOMChildNode::replaceWith' => 'REplaces the node with new nodes',
        'DOMComment::__construct' => 'Creates a new DOMComment object',
        'DOMDocument::createAttribute' => 'Create new attribute',
        'DOMDocument::createAttributeNS' => 'Create new attribute node with an associated namespace',
        'DOMDocument::createCDATASection' => 'Create new cdata node',
        'DOMDocument::createComment' => 'Create new comment node',
        'DOMDocument::createDocumentFragment' => 'Create new document fragment',
        'DOMDocument::createElement' => 'Create new element node',
        'DOMDocument::createElementNS' => 'Create new element node with an associated namespace',
        'DOMDocument::createEntityReference' => 'Create new entity reference node',
        'DOMDocument::createProcessingInstruction' => 'Ceates new PI node',
        'DOMDocument::createTextNode' => 'Create new text node',
        'DOMDocument::getElementById' => 'Searches for an element with a certain id',
        'DOMDocument::getElementsByTagName' => 'Searches for all elements with given local tag name',
        'DOMDocument::getElementsByTagNameNS' => 'Searches for all elements with given tag name in specified namespace',
        'DOMDocument::importNode' => 'Import node into current document',
        'DOMDocument::load' => 'Load XML from a file',
        'DOMDocument::loadHTML' => 'Load HTML from a string',
        'DOMDocument::loadHTMLFile' => 'Load HTML from a file',
        'DOMDocument::loadXML' => 'Load XML from a string',
        'DOMDocument::normlizeDocument' => 'Normalizes the document',
        'DOMDocument::registerNodeClass' => 'Register extended class used to create base node type',
        'DOMDocument::relaxNGValidate' => 'Performs relaxNG validation on the document',
        'DOMDocument::relaxNGValidateSource' => 'Performs relaxNG validation on the document',
        'DOMDocument::save' => 'Dumps the internal XML tree back into a file',
        'DOMDocument::saveHTML' => 'Dumps the internal document into a string using HTML formatting',
        'DOMDocument::saveHTMLFile' => 'Dumps the internal document into a file using HTML formatting',
        'DOMDocument::saveXML' => 'Dumps the internal XML tree vback into a string',
        'DOMDocument::schemaValidate' => 'Validates a document based on a schema. Only XML Schema 1.0 is supported',
        'DOMDocument::schemaValidateSource' => 'Vaqlidats a document based on a schema',
        'DOMDocument::validate' => 'Validates the document based on its DTD',
        'DOMDocument::xinclude' => 'Substitutes XIncludes in a DOMDocument Object',
        'DOMDocument::__construct' => 'Creates a new DOMDocument object',
        'DOMDocumentFragment::appendXML' => 'Append raw XML data',
        'DOMDocumentFragment::__construct' => 'Constructs a DOMDocumentFragment object',
        'DOMElement::getAttribute' => 'Returns value of attribute',
        'DOMElement::getAttributeNode' => 'Returns attribute node',
        'DOMElement::getAttributeNodeNS' => 'Returns attribute node',
        'DOMElement::getAttributeNS' => 'Returns value of attribute',
        'DOMElement::getElementsByTagName' => 'Gets elements by tagname',
        'DOMElement::getElementsByTagNameNS' => 'Get elements by namespaceURI and localName',
        'DOMElement::hasAttribute' => 'Checks to see if attribute exists',
        'DOMElement::hasAttributeNS' => 'Checks to see if attribute exists',
        'DOMElement::removeAttribute' => 'Removes attribute',
        'DOMElement::removeAttributeNode' => 'Removes attribute',
        'DOMElement::removeAttributeNS' => 'Removes attribute',
        'DOMElement::setAttribute' => 'Adds new or modifies existing attribute',
        'DOMElement::setAttributeNode' => 'Adds new attribute node to element',
        'DOMElement::setAttributeNodeNS' => 'Adds new attribute node to element',
        'DOMElement::setAttributeNS' => 'Adds new attribute',
        'DOMElement::setIdAttribute' => 'Declares the attribute specified by name to be of type ID',
        'DOMElement::setIdAttributeNode' => 'Declares the attribute specified by node to be of type ID',
        'DOMElement::setIdAttributeNS' => 'Declares the attribute specified by local name and namespace URI to be of typoe ID',
        'DOMElement::__construct' => 'Creates a new DOMElement object',
        'DOMEntityReference::__construct' => 'Creates a new DOMEntityReference object',
        'DOMImplementation::createDocument' => 'Creates a DOMDoducment object of the specified type with its document element',
        'DOMImplementation::createDocumentType' => 'Creates an empty DOMDocument object',
        'DOMImplementation::hasFeature' => 'Test if the DOM implementation implements a specific feature',
        'DOMImplementation::__construct' => 'Creates a new DOMImplementation object',
        'DOMNamedNodeMap::count' => 'Get number of nodes in the map',
        'DOMNamedNodeMap::getNamedItem' => 'Retrieves a node specified by name',
        'DOMNamedNodeMap::getNamedItemNS' => 'Rtrieves a node specified by local name and namespace URI',
        'DOMNamedNodeMap::item' => 'Retrieves a node specified by index',
        'DOMNode::appendChild' => 'Adds new child at the end of the children',
        'DOMNode::C14N' => 'Canonicalize nodes to a string',
        'DOMNode::C14NFile' => 'Canonicaliz nodes to a file',
        'DOMNode::cloneNode' => 'Clones a node',
        'DOMNode::getLineNo' => 'Get line number for a node',
        'DOMNode::getNodePath' => 'Get an XPath for a node',
        'DOMNode::hasAttributes' => 'Checks if node has attributes',
        'DOMNode::hasChildNodes' => 'Checks if node has children',
        'DOMNode::insertBefore' => 'Adds a new child before a reference node',
        'DOMNode::isDefaultNamespace' => 'Checks if the specified namespaceURI isv the default namspace or not',
        'DOMNode::isSameNode' => 'Indicates if two nodes are the same node',
        'DOMNode::isSupported' => 'Checks if feature is supported forv specified version',
        'DOMNode::lookupNamespaceUri' => 'Gts the namespace URI of the node based on the prefix',
        'DOMNode::lookupPrefix' => 'Gets the namespace prefix of the node based on the prefix',
        'DOMNode::nortmalize' => 'Normalizes the node',
        'DOMNode::removeChild' => 'Removes child from list of children',
        'DOMNode::replaceChild' => 'Replaces a child',
        'DOMNodeList::count' => 'Get number of nodes in the list',
        'DOMNodeList::item' => 'Retrieves a node specified by index',
        'DOMParentNode::append' => 'Appends nodes after the last child node',
        'DOMParentNode::prepend' => 'Prepends nodes before the first child node',
        'DOMProcessingInstruction::__construct' => 'Creates a new DOMProcessingInstruction object',
        'DOMText::isElementContentWhitespace' => 'Returns whether this text node contains whitespace in element content',
        'DOMText::isWhitespaceInElementContent' => 'Indicats whether this vtext node contains whtespace',
        'DOMText::splitText' => 'Breaks this node into two nodes at the spcified offset',
        'DOMText::__construct' => 'Creates a new DOMText object',
        'DOMXPath::evaluate' => 'Evaluates the given XPath expression and returns a typed result if possible',
        'DOMXPath::query' => 'Evaluates the given XPath expression',
        'DOMXPath::registerNamespace' => 'Registers the namespace with the DOMXPath obejct',
        'DOMXPath::registerPhpFunctions' => 'Register PHP functions as XPath functions',
        'DOMXPath::__construct' => 'Creates a new DOMXPath object',
        'dom_import_simplexml' => 'Gets a DOMElement object from a SimpleXMLElement object',
        'dotnet::__construct' => 'dotnet class consrtuctor',
        'doubleval' => 'Alias of floatval',
        'Ds\Collection::clear' => 'Removes all values',
        'Ds\Collection::copy' => 'Returns a shallow copy of the collection',
        'Ds\Collection::isEmpty' => 'Returns whether the collection is empty',
        'Ds\Collection::toArray' => 'Converts the collection to an array',
        'Ds\Deque::allocate' => 'Allocates enough memory for a required capacity',
        'Ds\Deque::apply' => 'Updats all values by applying a callback function to each value',
        'Ds\Deque::capacity' => 'Returns the current capacity',
        'Ds\Deque::clear' => 'Removes all values from the deque',
        'Ds\Deque::contains' => 'Determines if the deque contains given values',
        'Ds\Deque::copy' => 'Returns a shallow copy of the deque',
        'Ds\Deque::count' => 'Returns the number of values in the collection',
        'Ds\Deque::filter' => 'Creates a new deque using a callback to determine which values to include',
        'Ds\Deque::find' => "Attempts to find a values's index",
        'Ds\Deque::first' => 'Returns the first value in the deque',
        'Ds\Deque::get' => 'Returns the value at given index',
        'Ds\Deque::insert' => 'Inserts values at a given index',
        'Ds\Deque::isEmpty' => 'Return whether the deque is empty',
        'Ds\Deque::join' => 'Joins all values together as a string',
        'Ds\Deque::joinSerialize' => 'Returns a representation thar can be converted to JSON',
        'Ds\Deque::last' => 'Return the last value',
        'Ds\Deque::map' => 'Returns the result of applying a callback to each value',
        'Ds\Deque::merge' => 'Returns the result of adding all given values to the deque',
        'Ds\Deque::pop' => 'Removes and returns the last value',
        'Ds\Deque::push' => 'Adds values to the end of the deque',
        'Ds\Deque::reduce' => 'Reduces the deque to a single value using a callback function',
        'Ds\Deque::remove' => 'Removes and returns a value by index',
        'Ds\Deque::reverse' => 'Reverses the deque in-place',
        'Ds\Deque::reversed' => 'Returns a reversed copy',
        'Ds\Deque::rotate' => 'Rotates the deque by a given number of rotations',
        'Ds\Deque::set' => 'Updates a value at a given index',
        'Ds\Deque::shift' => 'Removes and returns the first value',
        'Ds\Deque::slice' => 'Returns a sub-deque of a given range',
        'Ds\Deque::sort' => 'Sorts the deque in-place',
        'Ds\Deque::sorted' => 'Returns a sorted copy',
        'Ds\Deque::sum' => 'Returns the sum of all values in the deque',
        'Ds\Deque::toArray' => 'Converts the deque to an array',
        'Ds\Deque::unshift' => 'Adds values to the front of the deque',
        'Ds\Deque::__construct' => 'Creates a new instance',
        'Ds\Hashable::equals' => 'Determines whether an object is equal to the current instance',
        'Ds\Hashable::hash' => 'Returns a scalar value to be used as a hash',
        'Ds\Map::allocate' => 'Allocates enough memory for a required capacity',
        'Ds\Map::apply' => 'Updates all values by applying a callback function to each value',
        'Ds\Map::capacity' => 'Returns the current capacity',
        'Ds\Map::clear' => 'Removes all values',
        'Ds\Map::copy' => 'Returns shallow copy of the map',
        'Ds\Map::count' => 'Returns the number of values in the map',
        'Ds\Map::diff' => 'Creates a new map using a callable to determine which pairs to include',
        'Ds\Map::filter' => 'Creates a new map using a callable to determine which pairs to include',
        'Ds\Map::first' => 'Returns the first pair in the map',
        'Ds\Map::get' => 'Returns the value for a given key',
        'Ds\Map::hasKey' => 'Determines whether the map contains a given key',
        'Ds\Map::hasValue' => 'Determines whether the map contains a given value',
        'Ds\Map::intersect' => 'Creates a new map by intersecting keys with another map',
        'Ds\Map::isEmpty' => 'Returns whether the map is empty',
        'Ds\Map::jsonSerialize' => 'Returns a representation that can be converted to JSON',
        'Ds\Map::keys' => "Returns a set of the map's keys",
        'Ds\Map::ksort' => 'Sorts the map in-place by key',
        'Ds\Map::ksorted' => 'Returns a copy, sorted by key',
        'Ds\Map::last' => 'Returns the last pair of the map',
        'Ds\Map::map' => 'Returns the result of applying a callback to each value',
        'Ds\Map::merge' => 'Returns the result of adding all given associations',
        'Ds\Map::pairs' => 'Returns a sequence containing all the pairs of the map',
        'Ds\Map::put' => 'Associates a key with a value',
        'Ds\Map::putAll' => 'Associates all key-value pairs of a traversable object or array',
        'Ds\Map::reduce' => 'Reduces the map to a single value using a callback function',
        'Ds\Map::remove' => 'Removes and returns a value by key',
        'Ds\Map::reverse' => 'Reverses the map in-place',
        'Ds\Map::reversed' => 'Returns a reversed copy',
        'Ds\Map::skip' => 'Returns the pair at a given postional index',
        'Ds\Map::slice' => 'Returns a subset of the map defined by a starting index and length',
        'Ds\Map::sort' => 'Sorts the map in-place by value',
        'Ds\Map::sorted' => 'Returns a copy, sorted by value',
        'Ds\Map::sum' => 'Returns the sum of all values in the map',
        'Ds\Map::toArray' => 'Converts the map to an array',
        'Ds\Map::union' => 'Creates a new map using values from the current instance and another map',
        'Ds\Map::values' => "Returns  a sequence of the map's values",
        'Ds\Map::xor' => 'Creates a new map using keys of either the current instance or of another map, but not of both',
        'Ds\Map::__construct' => 'Creates a new instance',
        'Ds\Pair::clear' => 'Removes all values',
        'Ds\Pair::copy' => 'Returns a shallow copy of the pair',
        'Ds\Pair::isEmpty' => 'Returns whether the pair is empty',
        'Ds\Pair::jsonSerialize' => 'Rturns a reprsentation that can b e converted to JSON',
        'Ds\Pair::toArray' => 'Converts the pair to an array',
        'Ds\Pair::__construct' => 'Creates a new instance',
        'Ds\PriorityQueue::allocate' => 'Allocates enough memory for a required capacity',
        'Ds\PriorityQueue::capacity' => 'Returns the currnt capacity',
        'Ds\PriorityQueue::clear' => 'Removes all values',
        'Ds\PriorityQueue::copy' => 'Returns a shallow copy of the queue',
        'Ds\PriorityQueue::count' => 'Returns the number of values in the queue',
        'Ds\PriorityQueue::isEmpty' => 'Returns whether the queue is empty',
        'Ds\PriorityQueue::jsonSerialize' => 'Returns a representation that can be converted to JSON',
        'Ds\PriorityQueue::peek' => 'Returns the value at the front of the queue',
        'Ds\PriorityQueue::pop' => 'Removes and returns the value vwith the highest priority',
        'Ds\PriorityQueue::push' => 'Pushes values into the queue',
        'Ds\PriorityQueue::toArray' => 'Converts the queue to an array',
        'Ds\PriorityQueue::__construct' => 'Creates a new instance',
        'Ds\Queue::allocate' => 'Allocates enough memory for a requred capacity',
        'Ds\Queue::capacity' => 'Returns the current capacity',
        'Ds\Queue::clear' => 'Removes all values',
        'Ds\Queue::copy' => 'Returns a shallow copy of the queue',
        'Ds\Queue::count' => 'Returns the number of values in the queue',
        'Ds\Queue::isEmpty ' => 'Returns whether the queue is empty',
        'Ds\Queue::jsonSerialize' => 'Returns a representation that can be converted to JSON',
        'Ds\Queue::peek' => 'Returns the values at the front of the queue',
        'Ds\Queue::pop' => 'Removes and returns the value at the front of thev queue',
        'Ds\Queue::push' => 'Pushes values into the queue',
        'Ds\Queue::toArray' => 'Convrts the queue to an array',
        'Ds\Queue::__construct' => 'Creates a new instance',
        'Ds\Sequence::allocate' => 'Allocates enough memory for a required capacity',
        'Ds\Sequence::apply' => 'Updates all values by applying a callback function to each value',
        'Ds\Sequence::capacity' => 'Returns the current capacity',
        'Ds\Sequence::contains' => 'Determines if the sequence contains given values',
        'Ds\Sequence::filter' => 'Creates a new sequence using a callable to detrmine which values to include',
        'Ds\Sequence::find' => "Attempts to find a value's index",
        'Ds\Sequence::first' => 'Returns the value at a given index',
        'Ds\Sequence::get' => 'Returns the value at a given index',
        'Ds\Sequence::insert' => 'Inserts values at a given index',
        'Ds\Sequence::join' => 'Joins all values together as a string',
        'Ds\Sequence::last' => 'Returns the last value',
        'Ds\Sequence::map' => 'Returns the result of applying a callback to each value',
        'Ds\Sequence::merge' => 'Returns the results of adding all given values to the sequence',
        'Ds\Sequence::pop' => 'Removes and returns the last value',
        'Ds\Sequence::push' => 'Adds values to the end of the sequence',
        'Ds\Sequence::reduce' => 'Reduces the sequence to a signle value using a callback function',
        'Ds\Sequence::remove' => 'Removes and returns a value by index',
        'Ds\Sequence::reverse' => 'Reverses the sequence in-place',
        'Ds\Sequence::reversed' => 'Returns a reversed copy',
        'Ds\Sequence::rotate' => 'Rotats the sequence by a given number of rotations',
        'Ds\Sequence::set' => 'Updates a value at a given index',
        'Ds\Sequence::shift' => 'Removes and returns the first value',
        'Ds\Sequence::slice' => 'Returns a sub-sequence of a given range',
        'Ds\Sequence::sort' => 'Sorts the sequence in-place',
        'Ds\Sequence::sorted' => 'Returns a sorted copy',
        'Ds\Sequence::sum' => 'Returns the sum of all values in the sequence',
        'Ds\Sequence::unshift' => 'Adds values to the front of the sequence',
        'Ds\Set::add' => 'Adds values to the set',
        'Ds\Set::allocate' => 'Allocates enough memory for a required capacity',
        'Ds\Set::capacity' => 'Returns the current capacity',
        'Ds\Set::clear' => 'Removes all values',
        'Ds\Set::contains' => 'Detremines if the vset contains all values',
        'Ds\Set::copy' => 'Returns a shallow copy of the set',
        'Ds\Set::count' => 'Returns the number of values in the set',
        'Ds\Set::diff' => "Creates a new set using values that aren't in another set",
        'Ds\Set::filter' => 'Creates a new set using a callable to determine which values to include',
        'Ds\Set::first' => 'Creates the first value in the set',
        'Ds\Set::get' => 'Returns the value at a given index',
        'Ds\Set::intersect' => 'Creates a new set by intersecting values with another set',
        'Ds\Set::isEmpty' => 'Returns whether the set is empty',
        'Ds\Set::join' => 'Joins all values together as a string',
        'Ds\Set::joinSerialize' => 'Returns a representation that can be converted to JSON',
        'Ds\Set::last' => 'Returns the last value in the set',
        'Ds\Set::merge' => 'Returns the last value in the set',
        'Ds\Set::reduce' => 'Reduces the set to a single value using a callback function',
        'Ds\Set::remove' => 'Removes all given values from the set',
        'Ds\Set::reverse' => 'Reverses the set in-place',
        'Ds\Set::reversed' => 'Returns a reversed copy',
        'Ds\Set::slice' => 'Returns a sub-set of a given range',
        'Ds\Set::sort' => 'Sorts the set in-place',
        'Ds\Set::sorted' => 'Returns a sorted copy',
        'Ds\Set::sum' => 'Returns the sum of all values in the set',
        'Ds\Set::toArray' => 'Converts the set to an array',
        'Ds\Set::union' => 'Creates a new set using values from the current instance and another set',
        'Ds\Set::xor' => 'Creates a new set using values in either the current instance or in another set, but not in both',
        'Ds\Set::__constrcut' => 'Creates a new instance',
        'Ds\Stack::allocate' => 'Allocats enough memory for a required capacity',
        'Ds\Stack::capacity' => 'Returns the current capacity',
        'Ds\Stack::clear' => 'Removes all values',
        'Ds\Stack::copy' => 'Returns a shallow copy of the stack',
        'Ds\Stack::count' => 'Returns the number of values in the stack',
        'Ds\Stack::isEmpty' => 'Returns whether the stack is empty',
        'Ds\Stack::jsonSerialize' => 'Returns a representation that can be converted to JSON',
        'Ds\Stack::peek' => 'Returns the value at the top of the stack',
        'Ds\Stack::pop' => 'Removes and returns the value at the top of the stack',
        'Ds\Stack::push' => 'Pushes values onto the stack',
        'Ds\Stack::toArray' => 'Converts the stack to an array',
        'Ds\Stack::__construct' => 'Creates a new instance',
        'Ds\Vector::allocate' => 'Allocates enough memory for a required capacity',
        'Ds\Vector::apply' => 'Updates all values by applying a callback function to each value',
        'Ds\Vector::capacity' => 'Returns the current capacity',
        'Ds\Vector::clear' => 'Removes all values',
        'Ds\Vector::contains' => 'Determines if the vector contains given values',
        'Ds\Vector::copy' => 'Returns a shallow copy of the vector',
        'Ds\Vector::count' => 'Returns the number of values in the collection',
        'Ds\Vector::filter' => 'Crates a new vecxtor using a callable to determine which values to include',
        'Ds\Vector::find' => "Attempts to find a value's index",
        'Ds\Vector::first' => 'Returns the first value in the vector',
        'Ds\Vector::get' => 'Returns the value at a given index',
        'Ds\Vector::insert' => 'Inserts values at a given index',
        'Ds\Vector::isEmpty' => 'Returns whether the vector is empty',
        'Ds\Vector::join' => 'Joins all values together as a string',
        'Ds\Vector::jsonSerialize' => 'Returns a representation that can be converted to JSON',
        'Ds\Vector::last' => 'Returns the last value',
        'Ds\Vector::map' => 'Returns the result of applying a callback to each value',
        'Ds\Vector::merge' => 'Returns the result of adding all given values to the vector',
        'Ds\Vector::pop' => 'Removes and rturns the last value',
        'Ds\Vector::push' => 'Adds values to the last value',
        'Ds\Vector::reduce' => 'Reduces the vector to a single value using a callback function',
        'Ds\Vector::remove' => 'Removes and returns a value by index',
        'Ds\Vector::reverse' => 'Reverses the vector in-place',
        'Ds\Vector::reversed' => 'Returns a reversed copy',
        'Ds\Vector::rotate' => 'Rotates the vector by a given number of rotations',
        'Ds\Vector::set' => 'Updates a value at a given index',
        'Ds\Vector::shift' => 'Removes and returns the first value',
        'Ds\Vector::slice' => 'Returns a sub-vector of a given range',
        'Ds\Vector::sort' => 'Sorts the vector in-place',
        'Ds\Vector::sorted' => 'Returns a sorted copy',
        'Ds\Vector::sum' => 'Returns the sum of all values in the vector',
        'Ds\Vector::toArray' => 'Converts tje vector to an array',
        'Ds\Vector::unshift' => 'Adds values to the front of the vector',
        'Ds\Vector::__constrcut' => 'Creates a new instance',
    );

    public $e = array(
        'each' => 'Return the current key and value pair from an array and advance the array curor',
        'easter_date' => 'Get Unix timestamp for midnight on Easter of a given year',
        'easter_days' => 'Get number of days after March 21 on which Easter falls for a given year',
        'echo' => 'Output one or more strings',
        'eio_busy' => 'Artificially increase load. Could be useful in tests, benchmarking',
        'eio_cancel' => 'Cancels a request',
        'eio_chmod' => 'Change file/directory permissions',
        'eio_chown' => 'Change file/directory permissions',
        'eio_close' => 'Close file',
        'eio_custom' => 'Execute custom request like any other eio_* call',
        'eio_dup2' => 'Duplicate a file descriptor',
        'eio_event_loop' => 'Polls libeio until all requsts proceeded',
        'eio_fallocate' => 'Allows the caller to directly manipulate the allocated disk space for a file',
        'eio_fchmod' => 'Change file prmissions',
        'eio_fchown' => "Synchronize a file's in-core statevwith strorage dvice",
        'eio_fdatasync' => "Synchronize a file's in-core state with storage device",
        'eio_fstat' => 'Geet file status',
        'eio_fstatvfs' => 'Get file system statistics',
        'eio_fsync' => "Synchronize a file's in-core state with storage device",
        'eio_ftruncate' => 'Truncate a file',
        'eio_futime' => 'Change file last access and modification times',
        'eio_get_event_stream' => 'Get stream representing a variable used in internal communications with libeio',
        'eio_get_last_error' => 'Returns string describing the last error associated with a request resource',
        'eio_grp' => 'Creates a request group',
        'eio_grp_add' => 'Adds a request to the request group',
        'eio_grp_cancel' => 'Cancels a rquest group',
        'eio_grp_limit' => 'Set group limit',
        'eio_init' => '(Re-)initialize Eio',
        'eio_link' => 'Create a hardlink for file',
        'eio_lstat' => 'Get file status',
        'eio_mkdir' => 'Create directory',
        'eio_mknod' => 'Crate a special or ordinary file',
        'eio_nop' => 'Does nothing except go thrugh the whole rquest cycle',
        'eio_npending' => 'Returns number of finished, but unhandled requests',
        'eio_nready' => 'Returns number of not-yet handled requests',
        'eio_nreqs' => 'Returns number of requests to be processed',
        'eio_nthreads' => 'Returns number of threads currently in use',
        'eio_open' => 'Opens a file',
        'eio_poll' => 'Can be to be called whenever there ar pending requests that need finishging',
        'eio_read' => 'REad from a file descriptor at given offset',
        'eio_readahead' => 'Perform file readahead into page cache',
        'eio_readdir' => 'Reads through a whole directory',
        'eio_readlink' => 'Read value of a symbolic link',
        'eio-realpath' => 'Gt the canonicalized absolute pathname',
        'eio_rename' => 'Change the name or location of a file',
        'eio_rmdir' => 'Remove a dirctory',
        'eio_seek' => 'Repositipons the offset of the open file associated with the fd argument to the arument offsert according to the directive whence',
        'eio_sendfile' => 'Transfr data b etween file descriptors',
        'eio_set_max_idle' => 'St maximum number of idle threads',
        'eio_set_max_parallel' => 'Set maximum parallel threads',
        'eio_set_max_poll_reqs' => 'Set maximum number of rquests processed in a poll',
        'eio_set_max_poll_time' => 'Set maximum poll',
        'eio_set_min_parallel' => 'St minimum parallel thread number',
        'eio_stat' => 'Get file status',
        'eio_statvfs' => 'Get file system statistics',
        'eio_symlink' => 'Crate a symbolic link',
        'eio_sync' => 'Commit buffer cache to disk',
        'eio_syncfs' => "Calls Linux' syncfs syscall, if available",
        'eio_sync_file_range' => 'Sync a file segment with disk',
        'eio_truncate' => 'Truncate a file',
        'eio_unlink' => 'Delete a name and possibly the file it rfrs to',
        'eio_utime' => 'Change file last access and modification times',
        'eio_write' => 'Write to file',
        'empty' => 'Determine whether a variable is empty',
        'EmptyIterator::current' => 'The current() method',
        'EmptyIterator::key' => 'The key() method',
        'EmptyIterator::next' => 'The next() method',
        'EmptyIterator::rewind' => 'The rewind() method',
        'EmptyIterator::valid' => 'The valid() method',
        'enchant_broker_describe' => 'Enumerates the Enchant providers',
        'enchant_broker_dict_exists' => 'Whether a dictionary exists or not, Using non-empty tag',
        'enchant_broker_free' => 'Free the broker resouce and its dictionaries',
        'enchant_broker_free_dict' => 'Free a dictionary resource',
        'enchant_broker_get_dict_path' => 'Get the dicrectory path for a given backend',
        'enchant_broker_get_error' => 'Returns the last error of th broker',
        'enchant_broker_init' => 'Create a new broker object capable of requsting',
        'enchant_broker_list_dicts' => 'Returns a list of available bdictionaries',
        'enchant_broker_request_dict' => 'Creates a new dictionary using a tag',
        'enchant_broker_request_pwl_dict' => 'Creates a dictionary using a PWL file',
        'enchant_broker_set_dict_path' => 'Set the dicrectory path for a given backend',
        'enchant_broker_set_ordering' => 'Declares a preference of dictinaries to use for the language',
        'enchant_dict_add' => 'Add a word to personal word list',
        'enchant_dict_add_to_personal' => 'Alias of enchant_dict_add',
        'enchant_dict_add_to_session' => "Add 'word' to this spell-checking session",
        'enchant_dict_check' => 'Check whether a word is correctly spelled or not',
        'enchant_dict_describe' => 'Describes an individual dictionary',
        'enchant_dict_get_error' => 'Returns the last error of the current spelling-session',
        'enchant_dict_is_added' => "Whether r not 'word' exists in vthis spelling-session",
        'enchant_dict_is_in_session' => 'Alias of enchant_dict_is_added',
        'enchant_dict_quick_check' => 'Check the wotd is correctly spelled and provide suggestions',
        'enchant_dict_store_replqcement' => 'Add a correction for a word',
        'enchant_dict_suggest' => 'Will return a list of values if any of those pre-conditions are not met',
        'end' => 'Set internal pointer of an array to tis last element',
        'enum_exists' => 'Checks if the enum has been defined',
        'Error::getCode' => 'Gets the error code',
        'Error::getFile' => 'Gets the file in which the error occurred',
        'Error::getLine' => 'Gets the line in which the error occurred',
        'Error::getMessage' => 'Gets the error message',
        'Error::getPrevious' => 'Returns previous Throwable',
        'Error::getTrace' => 'Gets the stack trace',
        'Error::getTraceAsString' => 'Gets the stack trace as a string',
        'Error::__clone' => 'Clone th error',
        'Error::__construct' => 'Construct the error object',
        'Error::__toString' => 'String representation of the error',
        'ErrorException::getSevreity' => 'Gets the exception severity',
        'ErrorException::__construct' => 'Constructs the exception',
        'error_clear_last' => 'Clear the most recent error',
        'error_get_last' => 'Get the lasst occurred error',
        'error_log' => 'Send an error message to the defined error handling routines',
        'error_reporting' => 'Sets which PHP errors are reported',
        'escapeshellarg' => 'Escape a string to be used as  a shell argument',
        'escapeshellcmd' => 'Escape shell metacharacters',
        'Ev::backend' => 'Returns an integer describng the backend used by libev',
        'Ev::depth' => 'Returns recursion depth',
        'Ev::embeddableBackends' => 'Returns the set of backends that are embeddable in other evenrt loops',
        'Ev::feedSignal' => 'Feed a signal event info Ev',
        'Ev::feedSignalEvent' => 'Feed signal event into the default loop',
        'Ev::iteratin' => 'Return the number of times the default event floop has polled for new events',
        'Ev::now Returns the time when the last iteration of the default event loop has started',
        'Ev::nowUpdate' => 'Establishes the current time by qwuery the kernal, updatng the time returned by Ev::now in the progress',
        'Ev::recommendedBackends' => 'Returns a bit mask of recommended backends for current platform',
        'Ev::resume' => 'Resume previous ly suspended dfdault event loop',
        'Ev::run' => 'Begin checking for events and calling callbacks for the default loop',
        'Ev::sleep' => 'Block the process for the given number of seconds',
        'Ev::stop' => 'Stops the dfault event loop',
        'Ev::supportedBackends' => 'Returns the set of backends supported bby current libev configuartion',
        'Ev::suspend' => 'Suspend the default event loop',
        'Ev::time' => 'Returns the current time in fractional seconds sincethe epoch',
        'Ev::verify' => 'Prforms intrnal consistency checks(for debugging)',
        'eval' => 'Evaluate a string as PHP code',
        'EvCheck::crateStopped' => 'Create instance of a stopped EvCheck watcher',
        'EvCheck::__constrcut' => 'Constrcuts the EvCheck watcher object',
        'EvChild::createStopped' => 'Create instance of a stopped vCheck watcher',
        'EvChild::set' => 'Configures the watcher',
        'EvChild::__construct' => 'Constructs the EvChild watcher object',
        'EvEmbed::createStopped' => 'Create stopped EvEmbed warcher object',
        'EvEmbed::set' => 'Configures the watcher',
        'EvEmbed::sweep' => 'Make a single, non-blcoking sweep over the embedded loop',
        'EvEmbed::__construct' => 'Constructs thev EvEmbed object',
        'Event::add' => 'Makes event pending',
        'Event::addSignal' => 'Alias of Event::add',
        'Event::addTimer' => 'Alias of Event::add',
        'Event::del' => 'Makes event non-pending',
        'Event::delSignal' => 'Alias of Event::del',
        'Event::delTimer' => 'Alias of Event::del',
        'Event::free' => 'Make event non-pending and free resources allocated for this event',
        'Event::getSupportdMethods' => 'Returns array with of the names of the method supported in this version of Libevent',
        'Event::pending' => 'Detects whether event is pending or scheduled',
        'Event::set' => 'Re-configurs evnt',
        'Event::setPriority' => 'Set event Priority',
        'Event::setTimer' => 'Constructs timer event object',
        'Event::signal' => 'Constructs timer event object',
        'Event::timer' => 'Constructs timer event object',
        'Event::__construct' => 'Constructs Event objects',
        'EventBase::dispatch' => 'Dispatch pending events',
        'EventBase::exit' => 'Stop dispatching events',
        'EventBase::free' => 'Free resources allocated for this event base',
        'EventBase::getFeatures' => 'Returns bitmask of featurs supported',
        'EventBase::getMethod ' => 'Returns event method in use',
        'EventBase::getTimeOfDayCached' => 'Returns the current evn=ent base time',
        'EventBase::gotExit' => 'Checks if the event loop was told to exit',
        'EventBase::gotStop' => 'Checks if the event loop was told to exit',
        'EventBase::loop' => 'Tells event_base to stop dispatching evnts',
        'EventBase::priorityInit' => 'Sets number of priorities per event base',
        'EventBase::reInit' => 'Re-initialize event base(after a fork)',
        'EventBase::stop' => 'Tells event_base to stop dispatching evnts',
        'EventBase::__construct = Constructs EventBase object',
        'EventBuffer::add' => 'Append data to the end of an event buffer',
        'EventBuffer::addBuffer' => 'Move all data from a buffer provided to the currentv instance of EventBuffer',
        'EventBuffer::appendFrom' => 'Moves the specified number of bytes from a source buffer to the end of the current bufferss',
        'EventBuffer::copyout' => 'Copies out specified number of byrtes from the front of the buffer',
        'EventBuffer::drain' => 'Removes specified number of bytes from the front of the buffer without copying it anywhere',
        'EventBuffer::enableLocking' => 'Description',
        'EventBuffer::expend' => 'Reserves space in buffer',
        'EventBuffer::freeze' => 'Prevent calls that modify an event buffer from succe]eeding',
        'EventBuffer::lock' => 'Acquires a lock on buffer',
        'EventBuffer::prepend' => 'Prepend data to the front of the buffer',
        'EventBuffer::prependBuffer' => 'Moves all data from source buffr to the front oft current buffer',
        'EventBuffer::pullup' => "Linearizes data within buffer and rturns it's contents as a string",
        'EventBuffer::read' => 'Read data from an evbuffre and drain the bytes read',
        'EventBuffer::readFrom' => 'Read datg from a file onto the end of th buffer',
        'EventBuffer::readLine' => 'Extracts a line from the front of th buffer',
        'EventBuffer::search' => 'Scans the buffer for an occurrence of a string',
        'EventBuffer::searchEol' => 'Scans the buffer for an occurrence of an end of line',
        'EventBuffer::substr' => 'Substracts a portion of the buffer data',
        'EventBuffer::unfreeze' => 'Re-enable calls that mdify an event buffer',
        'EventBuffer::unlock' => 'Releases lock acquired by EventBuffer::lock',
        'EventBuffer::write' => 'Write contents of the buffr to a file or socket',
        'EventBuffer::__construct' => 'Constructs EventBuffer object',
        'EventBufferEvent::close' => 'Closes file descriptor asociated with the current buffer event',
        'EventBufferEvent::connect' => "Connect buffer event's file descriptor to given address or UNIX socket",
        'EventBufferEvent::connectHost' => 'Connects to a hostname with optionally asyncronous DNS resolving',
        'EventBufferEvent::createPair' => 'Creates two buffer events connected to each other',
        'EventBufferEvent::disable' => 'Disable events read, write, or both on a buffer event',
        'EventBufferEvent::enable' => 'Enable events read, write, or both on a buffer event',
        'EventBufferEvent::free' => 'Free a buffer event',
        'EventBufferEvent::getDnsErrorString' => 'Returns string describing the last failed DNS lookup attempt',
        'EventBufferEvent::getEnabled' => 'Returns bitmask of events currently enabled on the buffer event',
        'EventBufferEvent::getInput' => 'Returns underlying input buffer associted with current buffer event',
        'EventBufferEvent::getOutput' => 'Returns underlying ouput buffer associated with current buffer event',
        'EventBufferEvent::read' => "Read buffer's data",
        'EventBufferEvent::readBuffer' => 'Drains the entire contents of the input buffer and places them into buf',
        'EventBufferEvent::setCallbacks' => 'Assigns rad, write and event(status) callbacks',
        'EventBufferEvent::setPriority' => 'Assign a priority to a bufferevent',
        'EventBufferEvent::setTimeouts' => 'Set the read and write timeout for a  buffer event',
        'EventBufferEvent::setWatermark' => 'Adjustsv read adn/or write watermarks',
        'EventBufferEvent::sslError' => 'Returns most recent OpenSSL error reported on the buffer event',
        'EventBufferEvent::sslFilter' => 'Create a new SSL buffer event to send its data ovr another buffer event',
        'EventBufferEvent::sslGetCipherInfo' => 'Returns a textual description of the cipher',
        'EventBufferEvent::sslGetCipherName' => 'Returns the current cipher name of the SSL connection',
        'EventBufferEvent::sslGetCipherVersion' => 'REturns versin of cipher used by current SSL connection',
        'EventBufferEvent::sslGetProtocol' => 'Returns the name of the protocol used for current SSL connection',
        'EventBufferEvent::sslRegegotiate' => 'Tells a bufferevent to begin SSL renegotiation',
        'EventBufferEvent::sslScoket' => 'Creates a new SSL bufffer event to send its data over an SSL on a socket',
        'EventBufferEvent::write' => "Adds data to a buffer event's output buffer",
        'EventBufferEvent::writeBuffer' => "Adds connects of the entire buffer to a buffer event's output buffer",
        'EventBufferEvent::__construct' => 'Constructs EventBufferEvent object',
        'EventConfig::avoidMethod' => 'Tells libevent to avoid specific event method',
        'EventConfig::requireFeatures' => 'Enters a required event method feature that the application demands',
        'EventConfig::setFlags' => 'Sets one or more flags to configure the eventual EventBase will be initialized',
        'EventConfig::setMaxDispatchInterval' => 'Prevents priority inversion',
        'EventConfig::__construct' => 'Constrcuts EventConfig object',
        'EventDnsBase::addNameserverIp' => 'Adds a nmaeserver to the DNS base',
        'EventDnsBase::addSearch' => 'Adds a domain to the list of search domains',
        'EventDnsBase::clearSearch' => 'Removes all current search suffixes',
        'EventDnsBase::countNamesrvers' => 'Gets thv number of configured nameservers',
        'EventDnsBase::loadHosts' => 'Loads a hosts file (in the same format as /etc/hosts) from hosts file',
        'EventDnsBase::parseResolvConf' => 'Scans the resolv.conf-formatted file',
        'EventDnsBase::setOption' => 'Set the value of a configuration option',
        'EventDnsBase::setSearchNdots' => "Set the 'ndots' parameter for searches",
        'EventDnsBase::__construct' => 'Constructs EventDnsBase object',
        'EventHttp::accept' => 'Makes an HTTP sevr accept connections on the specified socket stream or resource',
        'EventHttp::addServerAlias -Adds a server alias to the HTTP server object',
        'EventHttp::bind' => 'Binds an HTTP server on the specified address and port',
        'EventHttp::removeServerAlias' => 'Removes server alias',
        'EventHttp::setAllowedMethods' => 'Sets the what HTTP methods are supported in requests accepted by this server, and passed to user callbacks',
        'EventHttp::setCallback' => 'Sets a callback for specified URI',
        'EventHttp::setDefaultCallback' => 'Sets default callback to handle requests that are not caught by specific callbacks',
        'EventHttp::setMaxBodySize' => 'Sets maximum request body size',
        'EventHttp::setMaxHeadrSize' => 'Sets maximum HTTP header size',
        'Eventhttp::setTimeout' => 'Sets the timeout for an HTTP request',
        'EventHttp::__construct' => 'Constructs EventHttp object(the HTTP server)',
        'EventHttpConnection::getBase' => 'Returns event base associated with the connection',
        'EventHttpConnection::getPeer' => 'Gets the remote address and port the specified connection',
        'EventHttpConnection::makeRequest' => 'Makes an HTTTP request over the specified connection',
        'EventHttpConnection::setCloseCallback' => 'Setr callback for connection close',
        'EventHttpConnection::setLocalAddress' => 'Sets the IP address form which HTTP connections are made',
        'EventHttpConnection::setLocalPort' => 'Sets the local port form which connections are made',
        'EventHttpConnection::setMaxBodySize' => 'Sets maximum body size for the connection',
        'EventHttpConnection::setMaxHeadersSize' => 'Sets maximum header size',
        'EventHttpConnection::setRetries' => 'Sets the retry limit for the connection',
        'EventHttpConnection::setTimeout' => 'Sets the timeout for the connection',
        'EventHttpConnection::__construct' => 'Constructs EventHttpConnection object',
        'EventHttpRequest::addHeader' => 'Adds an HTTP header to the headers of the request',
        'EventHttpRequest::cancel' => 'Cancels a pending HTTP request',
        'EventHttpRequest::clearHeaders' => 'Removes all output headers from the header list of the request',
        'EventHttpRequest::closeConnection' => 'Closes associated HTTP connection',
        'EventHttpRequest::findHeader' => 'Finds the value belonging a header',
        'EventHttpRequest::free' => 'Fress the object and removes associatd events',
        'EventHttpRequest::getBufferEvent' => 'Returns EventBufferEvent object',
        'EventHttpRequest::getCommand' => 'Returns the request command(method)',
        'EventHttpRequest::getConnection' => 'Returns EventHttpConnection object',
        'EventHttpRequest::getHost' => 'Returns the request host',
        'EventHttpRequest::getInputBuffer' => 'Returns the input buffer',
        'EventHttpRequest::getInputHeaders' => 'Returns associative array of the input headers',
        'EventHttpRequest::getOutputBuffer' => 'Returns the output buffer of the request',
        'EventHttpRequest::getOutputHeaders' => 'Returns associative array of the output headers',
        'EventHttpRequest::getResponseCode' => 'Returns the response code',
        'EventHttpRequest::getUri' => 'Returns the request URI',
        'EventHttpRequest::removeHeader' => 'Removes an HTTP header from the headers of the request',
        'EventHttpRequest::sendError' => 'Send an HTML error message to the client',
        'EventHttpRequest::sendReply' => 'Send an HTML reply to the client',
        'EventHttpRequest::sendReplyChunk' => 'Send another data chunk as part of an ongoing chunked reply',
        'EventHttpRequest::sendReplyEnd' => 'Complete a chunked reply, freeing thev request as appropriate',
        'EventHttpRequest::sendReplyStart' => 'Initiate a chunked reply',
        'EventHttpRequest::__construct' => 'Constructs EventHttpRequest object',
        'EventListener::disable' => 'Disables an event connect listener object',
        'EventListener::enable' => 'Enables an event connect listener object',
        'EventListener::getBase' => 'Returns event base associated with the event listener',
        'EventListener::getSockerName' => "Retreives the cuurent address to which the listener's socket is bound",
        'EventListener::setCallback' => 'The setCallback purpose',
        'EventListener::setErrorCallback' => "Set event listener's error callback",
        'EventListener::__construct' => 'Creates new connection listener associatd with an event base',
        'EventSslContext::__construct' => 'Constructs an OpenSSL context for use wqith Event classes',
        'EventUtil::getLastSocketErrno' => 'Returns the most recent socket error number',
        'EventUtil::getLastSocketError' => 'Returns the most recent socker error',
        'EventUtil::getSocketFd' => 'Returns mumeric file descriptor of a socket, or stream',
        'EventUtil::getSocketName' => 'Retreives the curernt address to which the socker is bound',
        'EventUtil::setSocketOption' => 'Sets scoket options',
        'EventUtil::sslRAndPoll' => "Generates entropy by means of OpenSSL's RAND_poll()",
        'EventUtil::__construct' => 'The abstract constructor',
        'EvFork::createStopped' => 'Creates a stopped instance of EvFork watcher class',
        'EvFork::__constrcut' => 'Constructs the EvFork watcher object',
        'Evldle::createStopped' => 'Creates instance of a stopped Evldle watcher object',
        'Evldle::__construct' => 'Constructs the Evldle watcher object',
        'Evlo::createStopped' => 'Create stopped Evlo watcher object',
        'Evlo::set' => 'Configures the watcher',
        'Evlo::__construct' => 'Constructs Evlo wathcher object',
        'EvLoop::backend' => 'Returns an integer describing the backend used by libev',
        'EvLoop::check' => 'Creates EvCheck object associated with the current event loop instance',
        'EvLoop::child' => 'Creates EvChild object associated with the current event loop',
        'EvLoop::defaultLoop' => 'Returns or creates the defulat event loop',
        'EvLoop::embed' => 'Creates an instance of EvEmbed watcher associated with the current EvLoop object',
        'EvLoop::fork' => 'Creates EvFork watcher object associated with the current event loop instance',
        'EvLoop::idle' => 'Creates EvIdle watcher object associated with the current event loop instance',
        'EvLoop::invokePending' => 'Invoke all pending watchers while resettring their pending state',
        'EvLoop::io' => 'Crate Evlo watcher object associated with the current event loop instance',
        'EvLoop::loopFork' => 'Must becalled afet a fork',
        'EvLoop::now' => 'Returns the current "event loop time"',
        'EvLoop::nowUpdate' => 'Establishes the current time by querying the kernel, updating the time returned by EvLoop::now in the progress',
        'EvLoop::periodic' => 'Creates EvPeriodic watcher object associated with the current event loop instance',
        'EvLoop::prepare' => 'Creates EvPrepare watcher object associated with the current event loop isntance',
        'EvLoop::resume' => 'Resume previously suspended default event loop',
        'EvLoop::run' => 'Begin checking for events and calling callbacks for the loop',
        'EvLoop::signal' => 'Creates EvSignal watcher object associated with the current event loop instance',
        'EvLoop::stat' => 'Creates EvStat watcher object associated with the current envent loop instance',
        'EVLoop::stop' => 'Stops the event loop',
        'EvLoop::suspend' => 'Suspend the loop',
        'EvLoop::timer' => 'Create EvTimer watcher object associsated with the current event loop instance',
        'EvLoop::verify' => 'Performs intrnal consistency chck(for debugging',
        'EvLoop::__constrcut' => 'Constructs the even loop object',
        'EvPeriodic::again' => 'Simply stops and rstarts the periodic watcher again',
        'EvPeriodic::at' => 'Returns the absolute time that this watcher is supposed to trigger next',
        'EvPeriodic::cratedStopped' => 'Create a stopped EvPeriodic watcher',
        'EvPeriodic::set' => 'Configures the watcher',
        'EvPeriodic::__construct' => 'Constrcuts EvPeriodic watcher object',
        'EvPrepare::createStopped' => 'Creates a stopped instance of EvPrepare watcher',
        'EvPrepare::__constrcut' => 'Constructs Constrcuts EvPrepare watcher object',
        'EvSignal::createStopped' => 'Create stopped EvSignal watcher object',
        'EvSignal::set' => 'Configures th watcher',
        'EvSignal::__construct' => 'Constructs EvSignal watcher object',
        'EvStat::attr' => 'Returns the values most recently detected by Ev',
        'EvStat::createStopped' => 'Create a stopped EvStat watcher object',
        'EvStat::prev' => 'Returns the previous set of values returned by EvStat::attr',
        'EvStat::set' => 'Configures the watcher',
        'EvStat::stat' => 'Initiates the stat call',
        'EvStat::__construct' => 'Constructs EvStat watcher object',
        'EvTimer::again' => 'REstarts the timer watcher',
        'EvTimer::createStopped' => 'Creates EvTimer stopped watcher object',
        'EvTimer::set' => 'Configures the watcher',
        'EvTimer::__construct' => 'Constructs an EvTimer watcher object',
        'EvWatcher::clear' => 'Clear watcher pending atatus',
        'EvWatcher::feed' => 'Feeds Feeds the given revents set into the event loop',
        'EvWatcher::getLoop' => 'Rturns the loop responsible for the watcher',
        'EvWatcher::invoke' => 'Invokes the watcher callback with the given received events bit mask',
        'EvWatcher::keepalive' => 'Configures whether to keep the loop from returning',
        'EvWatcher::setCallback' => 'Sets new callback for the watcher',
        'EvWatcher::start' => 'Starts the watcher',
        'EvWatcher::stop' => 'Stops the watcher',
        'EvWatcher::__construct' => 'Abstract constructor of a watcher object',
        'EvWatcher::getCode' => 'Gets the Exception code',
        'Exception::getFile' => 'Gets the file in which the exception was created',
        'Exception::getLine' => 'Gets the line in which the exception was created',
        'Exception::getMessage' => 'Gets the Exception message',
        'Exception::getPrevious' => 'Returns previous Throwable',
        'Exception::getTrace' => 'Gts the stack trace',
        'Exception::getTraceAsString' => 'Gets the stack tracs as a string',
        'Exception::__clone' => 'Cl;one the exception',
        'Exception::__construct' => 'Construct the exception',
        'Exception::__toString' => 'String representation of the exception',
        'exec' => 'Execute an external program',
        'Executable::execute' => 'Execute statement',
        'ExecutionStatus::__construct' => 'ExectutionStatus constructor',
        'exif_imagetype' => 'Determine the type of an image',
        'exif_read_data' => 'Reads the EXIF headers from an image file',
        'exif_tagname' => 'Get the header name for an index',
        'exif_thumbnail' => 'Retrieve the embedded thumbnail of an image',
        'exit' => 'Output a message and terminate the current script',
        'exp' => 'Calculates the exponent of e',
        'expect://' => 'Process Interaction Streams',
        'expect_expect' => 'Waits until the output from a process matches one of the patterns, a spcified time period has passed, or an EOF is seen',
        'expect_popen' => 'Execute command via Bourne shell, and open the PTY stream to the process',
        'explode' => 'Split a string by a string',
        'expm1' => 'Returns exp(number)' => '1, computed in a way that is accurate evn when the value of number is close to zero',
        'expression' => 'Bind prepared statement wariables as parameters',
        'Expression::__construct' => 'Expression constructor',
        'extension_loaded' => 'Find out whether an extnsion is loaded',
        'extract' => 'Import variables into the current symbol table form an array',
        'ezmlm_hash' => 'Calculate the hash value needded by EZMLN',
    );

    public $f = array(
        'FANNConnection::getFromNeuron' => 'Returns the postions of starting neuron',
        'FANNConnection::getToNeuron' => 'Returns the positions of terminating neuron',
        'FANNConnection::getWeight' => 'Returns the connection weight',
        'FANNConnection::setWeight' => 'Sets the connections weight',
        'FANNConnection::__construct' => 'The connection constructor',
        'fann_cascadetrain_on_data' => 'Trains on an entire dataset, for a period of time using the Cascade2 training algorithm',
        'fann_cascadetrain_on_file' => 'Trains on an entire dataset read from file, for a period of time using the Cascade2 training algorithm',
        'fann_cleat_scaling_params' => 'Cleats scaling parameters',
        'fann_copy' => 'Crates a copy of  a fann structure',
        'fann_create_from_file' => 'Constructs a backpropagation neural network from a configuration file',
        'fann_create_shortcut' => 'Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections',
        'fann_create_shortcut_array' => 'Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections',
        'fann_create_sparse' => 'Creates a standard backpropagation neural netrwork, which is not fully connected',
        'fann_create_sparse_array' => 'Crates a standard backpropagation neural network, which is not fully connected using an array of layer sizes',
        'fann_create_standard' => 'Creates a standard fully connected backpropagation neural network',
        'fann_create_standard_array' => 'Creates a standard fully connected backpropagation neural network using an array of layer sizes',
        'fann_create_train' => 'Creates an empty traning data struct',
        'fann_create_train_from_callback' => 'Creates the training data struct from a user supplied function',
        'fann_descale_input' => 'Scale data in input vector after get it from anm based on previously calculated parameters',
        'fann_descale_ouput' => 'Scale data in output vector after get it from ann based on previously calculated parameters',
        'fann_descale_train' => 'Descale input and output data based on previously calculated parameters',
        'fann_destroy' => 'Destroys the entrie network and properly freeing all the associated memory',
        'fann_destroy_train' => 'Destructs the training data',
        'fann_duplicate_train_data' => 'Returns an exact copy of a fann train data',
        'fann_get_activation_function' => 'Returns the activation function',
        'fann_get_activation_steepness' => 'Returns the actiation steepness for supplied neuron and layer number',
        'fann_get_bias_array' => 'Get the number of bias in each layer in the network',
        'fann_get_bit_fail' => 'The number of fail bits',
        'fann_get_bit_fail_limit' => 'Returns the bit fail limit used during training',
        'fann_get_cascade_activation_functions' => 'Returns the cascade activation functions',
        'fann_get_cascade_activation_functions_count' => 'Returns the number of cascade activation functions',
        'fann_get_cascade_activation_steepnesses' => 'Returns the cascade activation steepnesses',
        'fann_get_cascade_activation_steepnesses_count' => 'The number of activation steepnesses',
        'fann_get_cascade_candidate_change_fraction' => 'Returns the cascade candidat change fraction',
        'fann_get_cascade_candidata_limit' => 'Return the candidate limit',
        'fann_get_cascade_candidate_stagnation_epochs' => 'Returns the number of cascade candidate stagnation epochs',
        'fann_get_cascade_max_cand_epochs' => 'Returns the maximum candidate epochs',
        'fann_get_cascade_max_out_epochs' => 'Returns the maximum out epochs',
        'fann_get_cascade_min_cand_epochs' => 'Returns the minimum candidate epochs',
        'fann_get_cascade_min_out_epochs' => 'Returns the minimum our epochs',
        'fann_get_cascade_num_candidates' => 'Returns the number of candidates used during training',
        'fann_get_cascade_num_candidate_groups' => 'Returns the number of candidat groups',
        'fann_get_cascade_output_change_fraction' => 'Returns the cascade ouput change fraction',
        'fann_get_cascade_output_stagnation_epochs' => 'Returns the number of cascade outpupt sdtagnatin epochs',
        'fann_get_cascade_weight_multiplier' => 'Returns the weight numltiplier',
        'fann_get_connection_array' => 'Get connections in the network',
        'fann_get_connection_rate' => 'Get the connection rate used when the network was created',
        'fann_get_errno' => 'Returns the last error number',
        'fann_get_errstr' => 'Returns the last errstr',
        'fann_get_layer_array = Get the number of neurons in each layer in the network',
        'fann_get_learing_momentum' => 'Returns the learning momentum',
        'fann_get_learing_rate' => 'Returns the learning rate',
        'fann_get_MSE' => 'Reads the mean square error from the network',
        'fann_get_network_type' => 'Get the type of neural network it was created as',
        'fann_get_num_inpput' => 'Get the number of input neural network',
        'fann_get_num_layers' => 'Get the number of layers in the neural network',
        'fann_get_num_output' => 'Get the number of output neurons',
        'fann_get_quickprop_decay' => 'Returns the decay which is a factor that weights should dcrease in each iteration during quickprop training',
        'fann_get_quickprop_mu' => 'Returns the mu factor',
        'fann_get_rprop_decrease_factor' => 'Return the increase factor used during RPROP training',
        'fann_get_rprop_delta_max' => 'Returns the maximum step-size',
        'fann_get_rprop_delta_min' => 'Returns the minimum step-size',
        'fann_get_rprop_delta_zero' => 'Returns the initial step-size',
        'fann_get_rprop_increase_factor' => 'Returns the increase factor used during RPROP training',
        'fann_get_sarprop_step_error_shift' => 'Returns the sarprop step error shift',
        'fann_get_sarprop_step_error_threshold_factor' => 'Returns the sarprop step error threshold factor',
        'fann_get_sarprop_temperature' => 'Returns the sarprop tremperature',
        'fann_get_sarprop_weight_decay_shift' => 'Returns the sarprop weight decay shift',
        'fann_get_total_connections' => 'Get the total number of connections in the entire network',
        'fann_get_total_neurons' => 'Get the total number of neurons in the entire network',
        'fann_get_training_algorithm' => 'Returns the training alogrithm',
        'fann_get_train_error_function' => 'Returns the error function used during training',
        'fann_get_train_stop_function' => 'Returns the stop function used during training',
        'fann_int_weights' => 'initializev the wieghts using Widrow + Nguyen;s algorithm',
        'fann_lenght_train_data' => 'Returns the number of training patterns in the train data',
        'fann_merge_train_data' => 'Merges the train data',
        'fann_num_input_train_data' => 'Returns the number of outputs in each of the training patterns in the train data',
        'fann_num_output_train_data' => 'Returns the number of outputs in each of the training patterns in the train data',
        'fann_print_error' => 'Prings the error string',
        'fann_randomize_weights' => 'Give each connection a random weight between min_weight and max weight',
        'fann_read_train_from_file' => 'Reads a file that stores traning data',
        'fann_reset_errno' => 'Resets the last error number',
        'fann_reset_errstr' => 'Resets the last error string',
        'fann_reset_MSE' => 'Resets the mean square error from the network',
        'fann_run' => 'Will run input through the neural network',
        'fann_save' => 'Saves the entire network to a configuration file',
        'fann_save_train' => 'Save the traning structure to a file',
        'fann_scale_input' => 'Scale data in input vector before feed it to ann based on previously calculated parametters',
        'fann_scale_input_train_data' => 'Scales the inputs in the training data to the specified range',
        'fann_scale_output' => 'Scale data in output vector before feed it to ann based on previouly calculated parameters',
        'fann_scale_output_train_data' => 'Scales the outputs in the training data to the specified range',
        'fann_scale_train' => 'Scale input and output data based on previously calculated parameters',
        'fann_scale_train_data' => 'Scales the inputs and outputs in the training data to the specified range',
        'fann_set_activation_function' => 'Sets the activatin function for supplied neuron neuron and layer',
        'fann_set_activation_function_hidden' => 'Sets the activation function for all of the hidden layers',
        'fann_set_activation_function_layer' => 'Sets the activation function for all the neurons in the supplied layer',
        'fann_set_activation_function_output' => 'Sets the activation function for the output layer',
        'fann_set_activation_steepness' => 'Sets the activation steepness for supplied neuron and layer number',
        'fann_set_activation_steepness_hidden' => 'Sets the steepness of the the activation steepness for all neurons in the all hidden layers',
        'fann_set_activation_steepness_layer' => 'Sets the activation steepness for all of the neurons in the supplied layer number',
        'fann_set_activation_steepness_output' => 'Sets the steepness of the activation steepness in the output layer',
        'fann_set_bit_fail_limit' => 'Set the bit fail limitv used during training',
        'fann_set_callback' => 'Sets the callvback function for use during training',
        'fann_set_cascade_activation_fuctions' => 'Sets the array of casade candidate activation functions',
        'fann_set_cascade_activation_steepnesses' => 'Sets the array of casade candidate activation steepnesses',
        'fann_set_cascade_candidate_change_fraction' => 'Sets the cascade candidate change fraction',
        'fann_set_cascade_candidate_limit' => 'SEts the candidate limit',
        'fann_set_cascade_candidate_stagnation_epochs' => 'Sets the number of cascade candidate stagnation epochs',
        'fann_set_cascade_max_cand_epochs -Sets the max candidate epochs',
        'fann_set_cascade_max_out_epochs' => 'Sets the maximum out epochs',
        'fann_set_cascade_min_cand_epochs' => 'Sets the min candidate epochs',
        'fann_set_cascade_min_out_epochs' => 'Sets the min cadidate epochs',
        'fann_set_cascade_num_candidate_groups' => 'Sets the number of candidate groups',
        'fann_set_cascade_output_change_fraction' => 'Sets the cascade output change fraction',
        'fann_set_cascade_output_stagnation_epochs' => 'Sets the number of cascade output stagnation epochs',
        'fann_set_cascade_weight_multiplier' => 'Sets the weight multiplier',
        'fann_set_error_log' => 'Sets where the errors are logged to',
        'fann_set_input_scaling_params' => 'Calculate vinput scaling parameters for future use based on training data',
        'fann_set_learning_momentum' => 'Sets the learning momentum',
        'fann_set_learning_rate' => 'Sets the learning rate',
        'fann_set_output_scaling_params' => 'Calculate output scaling parameters for furure use based on training data',
        'fann_set_quickprop_decay' => 'Sets the quickprop decay factor',
        'fann_set_quickprop_mu' => 'Sets the quickprop mu factor',
        'fann_set_rprop_decrease_factor' => 'Sets the decrease factor used during RPROP training',
        'fann_set_rprop_delta_max' => 'Sets the maximum step-size',
        'fann_set_rprop_delta_min' => 'Sets the minimum step-size',
        'fann_set_rprop_delta_zero' => 'Sets the initial step-size',
        'fann_set_rprop_increase_factor' => 'Sets the initial step-size',
        'fann_set_sarprop_step_error_shift' => 'Sets the sarprop step error shift',
        'fann_set_sarprop_step_error_threshold_factor' => 'Sets the sarprop step error threshold factor',
        'fann_set_sarprop_temperature' => 'Sets the sarprop temperature',
        'fann_set_sarprop_weight_decay_shift' => 'Sets the sarprop weight decay shift',
        'fann_set_scaling_params' => 'Calculate input and output scaling parameters for future use based on training data',
        'fann_set_training_algorithm' => 'Sets the training algorithm',
        'fann_set_train_error_function' => 'Sets the error function used during training',
        'fann_set_train_stop_fanction' => 'Sets the stop function used during training',
        'fann_set_weight' => 'Set a connection in the netwoek',
        'fann_set_weight_array' => 'Set connectnions in the nerwork',
        'fann_shuffle_train_data' => 'Shuffles training data, randomizing the order',
        'fann_subst_train data' => 'Returns an cop of a subset of the train data',
        'fann_test' => 'Test with a set of inputs, and a set of desired outputs',
        'fann_test_data' => 'Test a set of training data and calculates the MSE for the training data',
        'fann_train' => 'Train one iteration with a set of inputs, and a set of desired outputs',
        'fann_train_epoch' => 'Train one epoch with a set of training data',
        'fann_train_on_data' => 'Trains on an entire dataset for a period of time',
        'fann_train_on_file' => 'Trains on an entire dataset, which is read from file, for a period of time',
        'fastcgi_finish_request' => 'Flushe all response data to the client',
        'fbird_add_user' => 'Alias of ibase_add_user',
        'fbird_affected_rows' => 'Alias of ibase_affected_rows',
        'fbird_backup' => 'Allais of ibase_backup',
        'fbird_blob_add' => 'Alias of ibase_blob_add',
        'fbird_blob_cancel' => 'Cancel creating blob',
        'fbird_blob_close' => 'Alias of ibase_blob_close',
        'fbird_blob_create' => 'Alias of ibase_blob_create',
        'fbird_blob_echo' => 'Alias of ibase_blob_echo',
        'fbird_blob_get' => 'Alias of ibase_blob_get',
        'fbird_blob_import' => 'Alias of ibase_blob_import',
        'fbird_blob_info' => 'Alias of ibase_blob_info',
        'fbird_blob_open' => 'Alias of ibase_blob_open',
        'fbird_close' => 'Alias of ibase_close',
        'fbird_commit' => 'Alias of ibase_commit',
        'fbird_commit_ret' => 'Alias of ibase_commit_ret',
        'fbird_connect' => 'Alias of ibase_connect',
        'fbird_db_info' => 'Alias of ibase_db_info',
        'fbird_delete_user' => 'Alias of ibase_delete_user',
        'fbird_drop_db' => 'Alias of ibase ibase_drop_db',
        'fbird_errcode' => 'Alias of ibase_errcode',
        'fbird_errrmsg' => 'Alias of ibase_errmsg',
        'fbird_execute' => 'Alias of ibase_execute',
        'fbird_fetch_assoc' => 'Alias of ibase_fetch_assoc',
        'fbird_fetch_object' => 'Alias of ibase_fetch_object',
        'fbrid_fetch_row' => 'Alias of ibase_fetch_row',
        'fbird_field_info' => 'Alias of ibase_fetch_info',
        'fbird_free_event_handler' => 'Alias of ibase_free_event_handler',
        'fbird_free_query' => 'Alias of ibase_free_query',
        'fbird_free_result' => 'Alias of ibase_free_result',
        'fbird_gen_id' => 'Alias of ibase_en_id',
        'fbird_maintain_db' => 'Alias of ibase_maintain_db',
        'fbird_modify_user' => 'Alias of ibase_modify_user',
        'fbird_name_result' => 'Alias of ibase_name_result',
        'fbird_num_fields' => 'Alias of ibase_num_fields',
        'fbrid_num_params' => 'Alias of ibase_num_params',
        'fbird_param_info' => 'Alias of ibase_param_info',
        'fbird_pconnect' => 'Alias of ibase_pconnect',
        'fbird_prepare' => 'Alias of ibase_prepare',
        'fbird_query' => 'Alias of ibase_query',
        'fbird_restore' => 'Alias of ibase_restore',
        'fbird_rollback' => 'Alias of ibase_rollback',
        'fbird_rollback_ret' => 'Alias of ibase_rollback_ret',
        'fbird_server_info' => 'Alias of ibase_server_info',
        'fbird_service_attach' => 'Alias of ibase_service_attach',
        'fbird_service_detach' => 'Alias of ibase_service_detach',
        'fbird_set_event_handler' => 'Alias of ibase_set_event_hadnler',
        'fbird_trans' => 'Alias of ibase_trans',
        'fbird_wait_event' => 'Alias of ibase_wait_event',
        'fclose' => 'Close an open file pointer',
        'fdatsync' => 'Synchronizes data (but not meta-data)',
        'fdf_add_doc_javascript' => 'Adds javascript node to the FDF document',
        'fdf_add_template' => 'Adds a template into the FDF document',
        'fdf_close' => 'Close an FDF document',
        'fdf_create',
        'fdf_enum_values' => 'Call a user defiend function for each document value',
        'fdf_errno' => 'Return error code for last fdf operation',
        'fdf_error' => 'Return error description for FDF error code',
        'fdf_get_ap' => 'Get the appearance of a field',
        'fdf_get_attachment' => 'Extracts uploaded file embedded in the FDF',
        'fdf_get_encoding' => 'GEt the value of the /Encoding key',
        'fdf_get_file' => 'Get the value of a field',
        'fdf_get_flags' => 'Gets the flags of a field',
        'fdf_get_opt' => 'GEts a value from the opt array of a field',
        'fdf_get_status' => 'Get the value of the /STATUS key',
        'fdf_get_value' => 'Get the value of a field',
        'fdf_get_version' => 'Gets version number for FDDF API or file',
        'fdf_header' => 'Sets FDF-specificx output headers',
        'fdf_next_field_name' => 'Get the next field name',
        'fdf_open' => 'Open a FDF docuemtn',
        'fdf_open_string' => 'Read a FDF document as a string',
        'fdf_remove_item' => 'Sets target frame for form',
        'fdf_save' => 'Save a FDF document',
        'fdf_save_string' => 'Returns the FDF document as a string',
        'fdf_set_ap' => 'SEt the appearance of a field',
        'fdf_set_encoding' => 'Sets FDF character encoding',
        'fdf_set_file' => 'Set PDF document to display FDF data in',
        'fdf_set_flags' => 'Sets a flsg of a field',
        'fdf_set_javascript_action' => 'Sets an javascript action of a field',
        'fdf_set_on_import_javascript' => 'Adds javascript code to be executed when Acrobat opens the FDF',
        'fdf_set_opt' => 'Sets an option of a field',
        'fdf_set_status' => 'Set the value of the /STATUS key',
        'fdf_set_submit_form_action' => 'Sets a submit form action of a field',
        'fdf_set_target_frame' => 'Set target frame for form display',
        'fdf_set_value' => 'Set the value of a field',
        'fdf_set_version' => 'Sets version number for a FDF file',
        'fdiv' => 'Divides two numbers, according to IEEE 754',
        'feof' => 'Tests for end-of-file on a file pointer',
        'FFI::addr' => 'Creates an unmanaged pointer to C data',
        'FFI::alignof' => 'Gets the alignment',
        'FFI::arrayType' => 'Dynamically constructs a new C array type',
        'FFI::cast' => 'Performs a C type case',
        'FFI::cdef' => 'Creates a new FFI object',
        'FFI::free' => 'Releases an unmanaged data structure',
        'FFI::isNull' => 'Checks whether a FFI\CData is a null pointer',
        'FFI::load' => 'Loads C declarations from a C header file',
        'FFI::memcmp' => 'Compares memory areas',
        'FFI::memcpy' => 'Copies one memory area to another',
        'FFI::memset' => 'Fills a memory area',
        'FFI::new' => 'Creates a C data structure',
        'FFI::scope' => 'Instantiates an FFI object with C declarations parsed during preloading',
        'FFI::sizeof' => 'Get the size of C data or types',
        'FFI::string' => 'Creates a PHP string from a memory area',
        'FFI::type' => 'Creates an FFI\CType object from a C declaration',
        'FFI::typeof' => 'Gets the FFI\Ctype of FFI\CData',
        'FFI\CType::getAlignment' => 'Description',
        'FFI\CType::getArrayElementType' => 'Description',
        'FFI\CType::getArrayLength' => 'Description',
        'FFI\CType::getAttributes' => 'Description',
        'FFI\CType::getEnumKind' => 'Description',
        'FFI\CType::getFuncABI' => 'Description',
        'FFI\CType::getFuncParameterCount' => 'Description',
        'FFI\CType::getFuncParameterType' => 'Description',
        'FFI\CType::getFuncReturnType' => 'Description',
        'FFI\CType::getKind' => 'Description',
        'FFI\CType::getName' => 'Description',
        'FFI\CType::getPointerType' => 'Description',
        'FFI\CType::getSize' => 'Description',
        'FFI\CType::getStructFieldNames' => 'Description',
        'FFI\CType::getStructFieldOffset' => 'Description',
        'FFI\CType::getStructFieldType' => 'Description',
        'fflush' => 'Flushes the output to a file',
        'fgetc' => 'Gets character from file pointer',
        'fgetcsv' => 'Gets line from file pinter and parse for CSV fields',
        'fgets' => 'Gets line from file pointer',
        'fgetss' => 'Gets line from file pointer and strip HTML tags',
        'Fiber::getCurrent' => 'Gets the currently executing Fiber instance',
        'Fiber::getReturn' => 'Gets the value returned by the Fiber',
        'Fiber::isRunning' => 'Determines if the fiber is running',
        'Fiber::isStarted' => 'Determines if the fiber has started',
        'Fiber::isSuspended' => 'Determines if the fiber is suspended',
        'Fiber::isTerminated' => 'Determines if the fiber has terminated',
        'Fiber::resume' => 'Resumes execution of the fiber with a value',
        'Fiber::start' => 'Start execution of the fiber',
        'Fiber::suspend' => 'Suspends execution of the current',
        'Fiber::throw' => 'Resumes execution of the fiber with an exception',
        'Fiber::__construct' => 'Creates a new Fiber instance',
        'FiberError::__construct' => 'Constructor to disallow dicrect instantiation',
        'file' => 'Reads entrire file into an array',
        'file://' => 'Accessing local filesystem',
        'fileatime' => 'Gets last access time of file',
        'filectime' => 'Gets inode change time of file',
        'filegroup' => 'Gets file group',
        'fileinode' => 'Gets file inode',
        'filemtime' => 'Gets file modification time',
        'fileowner' => 'Gets file owner',
        'fileperms' => 'Gets file permissions',
        'filesize' => 'Gets file size',
        'FilesystemIteratr::current' => 'The current file',
        'FilesystemIteratr::getFlags' => 'Get the handling flags',
        'FilesystemIteratr::key' => 'Rettieve the key for the current file',
        'FilesystemIteratr::next' => 'Move to the next file',
        'FilesystemIteratr::rewind' => 'Rewinds back to the beginning',
        'FilesystemIteratr::setFlags' => 'Sets handling flags',
        'FilesystemIteratr::__constrcut' => 'Constructs a new filesystem iterator',
        'filetype' => 'Gets file type',
        'file_exists' => 'Checks whether a file or directory exists',
        'file_get_contents' => 'Reads entire file into a string',
        'file_put_contents' => 'Write data to a file',
        'FilterIterator::accept' => 'Check whether the current element of the iterator is acceptable',
        'FilterIterator::current' => 'Get the current element',
        'FilterIterator::getInnerIterator' => 'Get the inner iterator',
        'FilterIterator::key' => 'Get the current key',
        'FilterIterator::next' => 'Move the iterator forward',
        'FilterIterator::rewind' => 'Rewind the iterator',
        'FilterIterator::valid' => 'Check whether the current element is valid',
        'FilterIterator:: __construct' => 'Construct a filterIterator',
        'filter_has_var' => 'Checks if variable of specified type exists',
        'filter_id' => 'Returns the filter ID belonging to a named filter',
        'filter_input' => 'Gets a specific external variable by name and optionally filters it',
        'filter_input_array' => 'Gets external variables and optinally filters them',
        'filter_list' => 'Returns a list of all supported filters',
        'filter_var' => 'Filters a variable with a specified filter',
        'filter_var_array' => 'Gets multiple variables and optionally filters them',
        'finfo::buffer' => 'Alias of finfo_buffer()',
        'finfo::file' => 'Alias of finfo_file()',
        'finfo::set_flags' => 'Alias of finfo_set_flags()',
        'finfo::__constrcut' => 'Alias of finfo_open',
        'finfo_close' => 'Close finfo instance',
        'finfo_open' => 'Create a new finfo instance',
        'floatval' => 'Get float value of a variable',
        'flock' => 'Portable advisory file locaking',
        'floor' => 'Round fractinns down',
        'flush' => 'Flush system output buffer',
        'fmod' => 'Returns the floating point remainder (modulo) of the division of the arguments',
        'fnmatch' => 'Math filename against a pattern',
        'fopen' => 'Opens file or URL',
        'forward_static_call' => 'Call a static method',
        'forward_static_call_array' => 'Call a static method and pass the arguments as array',
        'fpassthru' => 'Output all remianing data on a file pointer',
        'fpm_get_status' => 'Returns the current FPM pool status',
        'fprintf' => 'Write a formatted string to a stream',
        'fputcsv' => 'Format line as CSV and wite to file pointer',
        'fputs' => 'Alias of fwrite',
        'fread' => 'Binnary-safe file read',
        'frenchtojd' => 'Converts a date from the French Repulican Calendar to a Julian Day Count',
        'fscanf' => 'Parses input from a file according to a fromat',
        'fseek' => 'Seeks on a file pointer',
        'fscokopen' => 'Open Internet or Unix domain socker connection',
        'fstat' => 'Gets infomation about a file using an open file pointer',
        'fsync' => 'Synchronizes changes to the file (including meta-data)',
        'ftell' => 'Returns the current position of the file read/write pointer',
        'ftok' => 'Convert a pathname and a project identifier to a System V IPC key',
        'ftp://' => 'Accessing FTP(s) URLs',
        'FTP context options' => 'FTP context option listing',
        'ftp_alloc' => 'Allocates space for a file to be uploaded',
        'ftp_append' => 'Append the contents of a file to another file on the FTP server',
        'ftp_cdup' => 'Changes to the parent directory',
        'ftp_chdir' => 'Changes the current directory on a FTP server',
        'ftp_chmod' => 'Set permissions on a file via FTP',
        'ftp_close' => 'Closes an FTP connection',
        'ftp_connect' => 'Opens an FTP connection',
        'ftp_delete' => 'Deletes a file on the FTP server',
        'ftp_exec' => 'REquests execution of a command on the FTP servers',
        'ftp_fget' => 'Downloads a file from the FTP server and saves to an open file',
        'ftp_fput' => 'Uploads from an open file to the FTP srver',
        'ftp_get' => 'Downloads a file from the FTP server',
        'ftp_get_option' => 'Retrieves various runtime behaviours of the current FTP connection',
        'ftp_login' => 'Logs in to an FTP connection',
        'ftp_mdtm' => 'Returns the last modified time of the given file',
        'ftp_mkdir' => 'Creates a directory',
        'ftp_mlsd' => 'Returns a list of files in the given directory',
        'ftp_nb_continue' => 'Continues retrieving/sending a file (non-blocking)',
        'ftp_nb_fget' => 'Rertieves a file from the FTP server and writes it to an open file (non-blocking)',
        'ftp_nb_fput' => 'Stores a file from an open file to the FTP server (non-blocking)',
        'ftp_nb_get' => 'Retrieves a file from the FTP server and writes it to a local file (non-blocking)',
        'ftp_nb_put' => 'Stores a file on the FTP server (non-blocking)',
        'ftp_nlist' => 'Returns a list of files in the given directory',
        'ftp_pasv' => 'Turns passive mode on or off',
        'ftp_put' => 'Uploads a file to the FTP server',
        'ftp_pwd' => 'Returns the current directory name',
        'ftp_quit' => 'Alias of ftip_close',
        'ftp_raw' => 'Sends an arbitray command to an FTP server',
        'ftp_rawlist' => 'Returns a derailed list of files in the given directory',
        'ftp_rename' => 'Renames a file or a directory on the FTP server',
        'ftp_rmdir' => 'Removes a directory',
        'ftp_set_option' => 'Set miscellaneous runtime FTP',
        'ftp_site' => 'Sends a SITE command to the server',
        'ftp_size' => 'Returns the size of the given file',
        'ftp_ssl_connect' => 'Opens a Secure SSL-FTP connection',
        'ftp_systype' => 'Returns the system type identifer of the remote FTP server',
        'ftruncate' => 'Truncates a file to agiven length',
        'function_exists' => 'Return true if the given function has been defined',
        'func_get_arg' => 'Return an item from the argument list',
        'func_get_args' => "Returns an array comprising a function's argument list",
        'func_num_args' => 'Returns the number of arguments passed to the function',
        'fwrite' => 'Binary-safe file write',
    );

    public $g = array(
        'gc_collect_cycles' => 'Force collection of any existing garbage ctckes',
        'gc_disable' => 'Deactives the circular reference collector',
        'gc_enable' => 'Activate the circular reference collector',
        'gc_enabled' => 'Rturns status of he circular reference collector',
        'gc_mem_caches' => 'Reclaims memeory used by the Zend Engine memory manager',
        'gc_status' => 'Gets infrmation about the garbage collector',
        'gc_info' => 'Retrieve information about the currently installed GD library',
        'GearmanClient::addOptions' => 'Add client options',
        'GearmanClient::addServer' => 'Add a job server to the client',
        'GearmanClient::addServers' => 'Add a list of job servers to the client',
        'GearmanClient::addTask' => 'Add a task to be run in parallel',
        'GearmanClient::addTaskBackground' => 'Add a background task to be run in parallel',
        'GearmanClient::addTaskHigh' => 'Add a high priority task to run in parallel',
        'GearmanClient::addTaskHighBackground' => 'Add a high priority background task to be run in parallel',
        'GearmanClient::addTaskLow' => 'Add a low priority task to run in parallel',
        'GearmanClient::addTaskLowBackground' => 'Add a low priority background task to be run in parallel',
        'GearmanClient::addTaskStatus' => 'Add a task to get status',
        'GearmanClient::clearCallbacks' => 'Clear all task callback functions',
        'GearmanClient::clone' => 'Create a copy of a GearmanClient object',
        'GearmanClient::context' => 'Get the application context',
        'GearmanClient::data' => 'Get the application dat (deprecated)',
        'GearmanClient::to' => 'Run a single task and return a result [deprecated]',
        'GearmanClient::doBackground' => 'Run a task in the backfround',
        'GearmanClient::doHigh' => 'Run a single high priority task',
        'GearmanClient::doHighBackground' => 'Run a high priority task in the background',
        'GearmanClient::doJobHandle' => 'Get the job handle for the running task',
        'GearmanClient::doLow' => 'Run a single low priority task',
        'GearmanClient::doLowBackground' => 'Run a low priority task in the background',
        'GearmanClient::doNormal' => 'Run a single task and return a result',
        'GearmanClient::doStatus' => 'Get the status for the running task',
        'GearmanClient::echo' => 'Send data to all joob servers to see if they echo it back [deprecated]',
        'GearmanClient::error' => 'Returns an error string for the last error encountered',
        'GearmanClient::getErrno' => 'Get an errno value',
        'GearmanClient::jobStatus' => 'Get the status of a background job',
        'GearmanClient::ping' => 'Send data to all job servers to see if they echo it back',
        'GearmanClient::removeOptions' => 'Remove client options',
        'GearmanClient::returnCode' => 'Get the last Gearman return code',
        'GearmanClient::runTasks' => 'Run a list of tasks in parallel',
        'GearmanClient::setClientCallback' => 'Callback function when there is data packet for a task (deprecated)',
        'GearmanClient::setCompleteCallback' => 'Set a function to be called on task completion',
        'GearmanClient::setContext' => 'Set application context',
        'GearmanClient::setCreatedCallback' => 'Set a callback for when a task is queued',
        'GearmanClient::setData' => 'St application data (deprecated)',
        'GearmanClient::setDataCallback' => 'Callback func when there is a data packet for a task',
        'GearmanClient::setExceptionCallback' => 'Set a callback for worker exceptions',
        'GearmanClient::setFailCallback' => 'Set callback for job failure',
        'GearmanClient::setOptions' => 'Set client options',
        'GearmanClient::setStatusCallback' => 'Set a callback fro collecting task status',
        'GearmanClient::setTimeout' => 'Set socket I/O activity timeout',
        'GearmanClient::setWarningCallback' => 'Set a callback for worker warnings',
        'GearmanClient::setWorkloadCallback' => 'Set a callback for accepting incremental data updatas',
        'GearmanClient::timeout' => 'Get current socket I/O activity timeout value',
        'GearmanClient::wait' => 'Wait for I/O activity on all connections in a client',
        'GearmanClient::__construct' => 'Create a GearmanClient instance',
        'GearmanJob::complete' => 'Send the result and complete status (deprecated)',
        'GearmanJob::data' => 'Send data for a running job (deprecated)',
        'GearmanJob::exception' => 'Send exception for running job (deprecated)',
        'GearmanJob::fail' => 'Send fail status (deprecated)',
        'GearmanJob::functionName' => 'Get function name',
        'GearmanJob::handle' => 'Get the job handle',
        'GearmanJob::returnCode' => 'Get last return code',
        'GearmanJob::sendComplate' => 'Send the result and complete status',
        'GearmanJob::sendData' => 'Send data for a running job',
        'GearmanJob::sendException' => 'Send exception for running job (exception)',
        'GearmanJob::sendFail' => 'Send fail status',
        'GearmanJob::sendStatus' => 'Send status',
        'GearmanJob::sendWarning' => 'Send a warning',
        'GearmanJob::setReturn' => 'Set a return value',
        'GearmanJob::status' => 'Send status (deprecated)',
        'GearmanJob::unique' => 'Get the unique identifer',
        'GearmanJob::warining' => 'Send a warining (deprecated)',
        'GearmanJob::workload' => 'Get woekload',
        'GearmanJob::workloadSize' => 'Get size of work load',
        'GearmanJob::__construct' => 'Create a Gearman instance',
        'GearmanTask::create' => 'Create a task (deprecated)',
        'GearmanTask::data' => 'Get data returnd for a task',
        'GearmanTask::dataSize' => 'Get the size of returned data',
        'GearmanTask::function' => 'Get asociated function name (deprecated)',
        'GearmanTask::functionName' => 'Get associated function name (deprecated)',
        'GearmanTask::isKnown' => 'Determine if task is known',
        'GearmanTask::isRunning' => 'Test whether the task is currently running',
        'GearmanTask::jobHandle' => 'Get the job handle',
        'GearmanTask::recvData' => 'Read work or result data into a buffer for a task',
        'GearmanTask::returnCode' => 'Get the last return code',
        'GearmanTask::sendData' => 'Send data for a task (deprecated)',
        'GearmanTask::sendWorkload' => 'Send data for a task',
        'GearmanTask::taskDenomonator' => 'Get completion percentae denominator',
        'GearmanTask::taskNumerator' => 'Get completion percentage numerator',
        'GearmanTask::unique' => 'Get the unique identifier for a task',
        'GearmanTask::uuid' => 'Get the unique identifier for a task (deprecated)',
        'GearmanTask::__construct' => 'Create a Gearman Task instance',
        'GearmanWorker::addFunction' => 'Register and add callback function',
        'GearmanWorker::addOptions' => 'Add worker options',
        'GearmanWorker::addServer' => 'Add a job server',
        'GearmanWorker::addServers' => 'Add job servers',
        'GearmanWorker::clone' => 'Create a copy of the worker',
        'GearmanWorker::echo ' => 'Test job server response',
        'GearmanWorker::error' => 'Get the last error  encountered',
        'GearmanWorker::getErrno' => 'Get errno',
        'GearmanWorker::options' => 'Get worker options',
        'GearmanWorker::register' => 'Register a function with the job server',
        'GearmanWorker::removeOptions' => 'Remove worker options',
        'GearmanWorker::returnCode' => 'Get last  Gearman return code',
        'GearmanWorker::setId' => 'Give the worker an identifier so it can be trackerd when asking gearmand for the list of avilable workers',
        'GearmanWorker::setOptions' => 'Set worker options',
        'GearmanWorker::setTimeout' => 'Set sockket I/O activity timeout',
        'GearmanWorker::timeout' => 'Get socket I/O activity timeout',
        'GearmanWorker::unregister' => 'Unregister a function names with the job servers',
        'GearmanWorker::unregisterAll' => 'Unregister all function names with the job servers',
        'GearmanWorker::wait' => 'Wait for activity from one of the job srvers',
        'GearmanWorker::work' => 'Wait for and perform jobs',
        'GearmanWorker::__construct' => 'Create a GearmanWorker instance',
        'Gender\Gender::connect' => 'Connect to an external name dictionary',
        'Gender\Gender::country' => 'Get textual country representation',
        'Gender\Gender::get' => 'Get gender of a name',
        'Gender\Gender::isNick' => 'Check if the name() is an alis of the name1',
        'Gender\Gender::similarNames' => 'GEt similar names',
        'Gender\Gender::__construct' => 'Construct the Gender object',
        'Generator::current' => 'Get the yielded value',
        'Generator::getReturn' => 'Get the return value of a generator',
        'Generator::key' => 'Get the yielded key',
        'Generator::next' => 'Resume execution of the generator',
        'Generator::rewind' => 'Rewind the iterator',
        'Generator::send = Send a value to the generator',
        'Generator::throw' => 'Throw an exception into the generator',
        'Generator::valid' => 'Check if the iterator has been closed',
        'Generator::__wakeup' => 'Serialize callback',
        'geoip_asnum_by_name' => 'Get the Autonomous System Numbers (ASN)',
        'geoip_continent_code_by_name' => 'Get the two letter continent code',
        'geoip_country_code3_by_name' => 'Get the three letter country code',
        'geoip_country_code_by_name' => 'Get the two letter country code',
        'geoip_country_name_by_name' => 'Get the full country name',
        'geoip_database_info' => 'Get GeoIP Database information',
        'geoip_db_avail' => 'Determine if GeoIP Database is available',
        'geoip_db_filename' => 'Returns the filename of the corresponding GeoIP Database',
        'geoip_db_get_all_info' => 'Returns detailed information about all GeoIP database types',
        'geoip_domain_by_name' => 'Get the second level domain name',
        'geoip_id_by_name' => 'Get the Internet connection type',
        'geoip_isp_by_name' => 'Get the Internet Service Provider (ISP) name',
        'geoip_netspeedcell_by_name' => 'Get the Internet connection speed',
        'geoip_org_by_name' => 'Get the organization name',
        'geoip_record_by_name' => 'Returns the detailed City information found in the GeoIP Database',
        'geoip_region_by_name' => 'Get the country code and region',
        'geoip_region_name_by_code' => 'Returns the region name for some country and region code combo',
        'geoip_setup_custom_directory' => 'Set a custom directory for the GeoIP database',
        'geoip_time_zone_by_country_and_region' => 'Returns the time zone for some country and region code combo',
        'getallheaders' => 'Fetch all HTTP request headers',
        'getcwd' => 'Gets the current working directory',
        'getdate' => 'Get date/time information',
        'getenv' => 'Gets the value of an environment variable',
        'gethostbyaddr' => 'Get the Internet host name corresponding to a given IP address',
        'gethostbyname' => 'Get the IPv4 addresses corresponding to a given Internet host name',
        'gethostbynamel' => 'Get a list of IPv4 addresses corresponding to a given Internet host name',
        'gethostname' => 'Get the host name',
        'getimagesize' => 'Get the size of an image',
        'getimagesizefromstring' => 'Get the size of an image from a tring',
        'getlastmod' => 'Gets time of last page modification',
        'getmxrr' => 'Get MX records corresponding to a given Internet host name',
        'getmygid' => "Get PHP script owner's GID",
        'getmyinode' => 'Gets the inode of the current script',
        'getmypid' => "Gets PHP's process ID",
        'getmyuid' => "Gets PHP script owner's UID",
        'getopt' => 'Gets options from the command line argument list',
        'getprotobyname' => 'Get protocol number associated with protocol name',
        'getprotobynumber' => 'Get protocol name associated with protocol number',
        'getrandmax' => 'Show largest possible random value',
        'getrusage' => 'Gets the current resource usages',
        'getservbyname' => 'Get port number associated with an Iternet service and protocol',
        'getservbyport' => 'Get internet service which corresponds to port and protocol',
        'getSession' => 'Connect to a MySQL server',
        'gettext' => 'Lookup a message in the current domain',
        'gettimeofday' => 'Get current time',
        'gettype' => 'Get the type of a variable',
        'get_browser' => "Tells what the user's browser is capable of",
        'get_called_calss' => 'The "Late Static Binding" class name',
        'get_cfg_var' => 'Gets the value of a PHP configuration option',
        'get_class' => 'Returns the name of the class of an object',
        'get_class_methods' => "Gets the class methods' names",
        'get_class_vars' => 'Get the default properrties of the class',
        'get_current_user' => 'Gets the name of the owner of the current PHP script',
        'get_debug_type' => 'Gets the tupe name of a variable in a way that is suitable for debugging',
        'get_declared_classes' => 'Returns an array with the name of the defined classes',
        'get_declared_interfaces' => 'Returns an array of all declared traits',
        'get_declared_traits' => 'Returns an array of all declared traits',
        'get_defined_constants' => 'Returns an associative array with the names of all the constants and their values',
        'get_defined_functions' => 'Returns an array of all defined functions',
        'get_defined_vars' => 'Returns an array of all defined variables',
        'get_extension_funcs' => 'Returns an array with the names of the functions of a module',
        'get_headers' => 'Fetche all the headers sent by the server in response to an HTTP request',
        'get_html_translation_table' => 'Returns the translation table used by htmlspecialchars and htmlentities',
        'get_included_files' => 'Returns an array with the names of included or required files',
        'get_include_path' => 'Gets the current include_path configuration options',
        'get_loaded_extension' => 'Returns an array with the names of all modules compiled and loaded',
        'get_magic_quotes_gpc' => 'Gets the current configuration nsetting of magic_quotes_gpc',
        'get_magic_quotes_runtime' => 'Gets the current active configuration setting of magic_qutoes_runtime',
        'get_mangled_object_vars' => 'Returns an array of mangled object properties',
        'get_meta_tags' => 'Extras all meta tag content attribbute from a file an returns an array',
        'get_object_vars' => 'Gets the properties of the given object',
        'get_parent_calss' => 'Retrieves the parent calss name for object or class',
        'get_required_files' => 'Alias of get_included_files',
        'get_resources' => 'Returns active resources',
        'get_resource_id' => 'Returns an integer identifier for the given resource',
        'get_resource_type' => 'Returns the resource type',
        'glob' => 'Find pathnames matching a pattern',
        'glob://' => 'Find pathnames matching pattern',
        'GlobIterator::count' => 'Get the number of directories and files',
        'GlobIterator::__construct' => 'Construct a directory using glob',
        'Gmagick::addimage' => 'Adds nw image to Gmagick object image list',
        'Gmagick::addnoiseimage' => 'Adds random noise to the image',
        'Gmagick::addnotateimage' => 'Annotates an image with text',
        'Gmagick::blurimage' => 'Adds blur filter to image',
        'Gmagick::borderimage' => 'Surrounds the image with a border',
        'Gmagick::charcoalimage' => 'Simulates a charcoal drawing',
        'Gmagick::chopimage' => 'Removes a region of an iamge and trims',
        'Gmagick::clear' => 'Clears all resources associated to Gmagick object',
        'Gmagick::commentimage' => 'Adds a comment to your image',
        'Gmagick::compositeimage' => 'Composite one image onto another',
        'Gmagick::cropimage' => 'Extracts a region of the image',
        'Gmagick::cropthumbnailimage' => 'Creates a crop thumbnail',
        'Gmagick::current' => 'The current purpose',
        'Gmagick::cyclecolormapimage' => "Displaces an image's colormap",
        'Gmagick::deconstructimages' => "Returns certain pixel differences between images",
        'Gmagick::despickleimage' => 'The despickleimage purpose',
        'Gmagick::destroy' => 'The destroy purpose',
        'Gmagick::drawimage' => 'Renders the GmagickDraw object on the current image',
        'Gmagick::edgeimage' => 'Enhance edges within the image',
        'Gmagick::embossimage' => 'Returns a grayscale image with a three-demensional effect',
        'Gmagick::enhanceimage' => 'Improves the quality of a noisy image',
        'Gmagick::equalizeimage' => 'Equalizes the image histogram',
        'Gmagick::flipimage' => 'Creates a vertical mirror image',
        'Gmagick::flopimage' => 'Creates a horizontal mirror image',
        'Gmagick::frameimage' => 'Adds a simulated three-dimensional border',
        'Gmagick::gammaimage' => 'Gamma-crottects an image',
        'Gmagick::getcopyright' => 'Returns the GraphicsMagick API copyright as a string',
        'Gmagick::getfilename' => 'The filename associated with an image sequence',
        'Gmagick::getimagebackgroundcolor' => 'Returns the image backgroundcolor',
        'Gmagick::getimageblueprimary' => 'Returns the chromaticy blue primary point',
        'Gmagick::getimagebordercolor' => 'Returns the image border color',
        'Gmagick::getimagechanneldepth' => 'Gets depth for a particular image channel',
        'Gmagick::getimagecolors' => 'Returns the color of the specified colormap index',
        'Gmagick::getimagecolorspace' => 'Gets the image colorspace',
        'Gmagick::getimagecompose' => 'Returns the composite operator associated with the image',
        'Gmagick::getimagedelay' => 'Gets the image dely',
        'Gmagick::getimagedepth' => 'Gets the depth f the image',
        'Gmagick::getimagedispose' => 'Gets the image desposal method',
        'Gmagick::getimageextrema' => 'Gets the extrema for the image',
        'Gmagick::getimagefilename' => 'Returns the filename of a particular image in a sequence',
        'Gmagick::getimageformat' => 'Returns the format of a particular image in a sequence',
        'Gmagick::getimagegamma' => 'Gets the image gamma',
        'Gmagick::getimagegreenprimary' => 'Returns the chromaticy green primary point',
        'Gmagick::getimageheight' => 'Returns the image height',
        'Gmagick::getimagehistogram' => 'Gets the image histogram',
        'Gmagick::getimageindex' => 'Gets the index of the current active image',
        'Gmagick::getimageinterlacescheme' => 'Gets the image interlace scheme',
        'Gmagick::getimageiterations' => 'Gets the image terations',
        'Gmagick::getimagematte' => 'Check if the image has a matte chennel',
        'Gmagick::getimagemattecolor' => 'Returns the image mattee color',
        'Gmagick::getimageprofile' => 'Returns the named image profile',
        'Gmagick::getimageredprimary' => 'Returns the chromaticity red primary point',
        'Gmagick::getimagerenderringintent' => 'Gets the image rendering intent',
        'Gmagick::getimageresolution' => 'Gets the image X and Y resolution',
        'Gmagick::getimagescene' => 'Gets the image scene',
        'Gmagick::getimagesignature' => 'Generates an SHA-256 message digest',
        'Gmagick::getimagetype' => 'Gets the potential image type',
        'Gmagick::getimageunits' => 'Gets the image units of reslution',
        'Gmagick::getimagewhitepoint' => 'Returns the chromaticity white point',
        'Gmagick::getimagewidth' => 'Returns the width of the image',
        'Gmagick::getpackagename' => 'Returns the GraphicsMagick package name',
        'Gmagick::getquantumdepth' => 'Returns the Gmagick quantum depth as a string',
        'Gmagick::getreleasedate' => 'Returns the GraphicsMagick release date as a string',
        'Gmagick::getsamplingfactors' => 'Gets the horizontal and vertical sampling factor',
        'Gmagick::getsize' => 'Returns the size associated with the Gmagick ojbect',
        'Gmagick::getVersion' => 'Returns the GraphicsMagick API version',
        'Gmagick::hashnextimage' => 'Checks if the object has more images',
        'Gmagick::haspreviousimage' => 'Checks if the object has more images',
        'Gmagick::implodeimage' => 'Creates a new image as a copy',
        'Gmagick::labelimage' => 'Adds a label to an image',
        'Gmagick::levelimage' => 'Adjusts the levels of an image',
        'Gmagick::magnifyimage' => 'Scales an image proportionally 2x',
        'Gmagick::mapimae' => 'Replaces the colors of an image with the closest color from a reference image',
        'Gmagick::medianfilterimage' => 'Applies a digital filter',
        'Gmagick::minifyimage' => 'Scales an image proportionally to half its size',
        'Gmagick::modulateimage' => 'Control the brightness, saturation, and hue',
        'Gmagick::motionbluriamge' => 'Simulates motion blur',
        'Gmagick::newimage' => 'Creates a new image',
        'Gmagick::nextimage' => 'Moves to the next image',
        'Gmagick::normalizeimage' => 'Enhances the contrast of a color image',
        'Gmagick::oilpaintimage' => 'Simulates an oil painting',
        'Gmagick::previousimage' => 'Move to the previous image in the object',
        'Gmagick::profileimage' => 'Adds or removes a profile from an image',
        'Gmagick::quantizeimage' => 'Analyzes the colors within a reference image',
        'Gmagick::quantizeimages' => 'The quantizeimages purpose',
        'Gmagick::queryfontmetrics' => 'Returns an array representing the font metrics',
        'Gmagick::queryfonts' => 'Returns the configured fonts',
        'Gmagick::queryformats' => 'Returns fromats supported by Gmagick',
        'Gmagick::radialblurimage' => 'Radial blurs an image',
        'Gmagick::raiseimage' => 'Creates a simulated 3d button-like effect',
        'Gmagick::read' => 'Reads timae from filenmae',
        'Gmagick::readimage' => 'Reads image from filename',
        'Gmagick::readimageblob' => 'Reads image from a binary string',
        'Gmagick::readimagefile' => 'The readimagefile purpose',
        'Gmagick::reducenoiseimage' => 'Smooths the contours of an image',
        'Gmagick::removeimage' => 'Removes an image from the image list',
        'Gmagick::removeiamgeprofile' => 'Removes the named image profile and returns it',
        'Gmagick::resampleimage' => 'Resample image to desired resolution',
        'Gmagick::resizeiamge' => 'Scales an image',
        'Gmagick::rollimage' => 'Offsets an image',
        'Gmagick::rotateimage' => 'Rotates an image',
        'Gmagick::scaleimage' => 'Scales the size of an image',
        'Gmagick::separateimagechannel' => 'Separates a channel from the image',
        'Gmagick::setCompressionQuality' => "Sets the object's defualt compression quality",
        'Gmagick::setfilename' => 'Sets the filename  before you read or write the image',
        'Gmagick::setimagebackgroundcolor' => 'Sets the image background color',
        'Gmagick::setimageblurprimary' => 'Sets the image chromaticity blue primary point',
        'Gmagick::setimagebordercolor' => 'Sets the image border color',
        'Gmagick::setimagechanneldepth' => 'Sts the depth of particular image checnnel',
        'Gmagick::setimagecolorspace' => 'Sets the image colorspace',
        'Gmagick::setimagecompose' => 'Sets the image composite operator',
        'Gmagick::setimagedelay' => 'Sets the image delay',
        'Gmagick::setimagedepth' => 'Sets the image depth',
        'Gmagick::setimagedispose' => 'Sets the image disposal method',
        'Gmagick::setimagefilename' => 'Sets the filename of a particular image in a sequence',
        'Gmagick::setimageformat' => 'Sets the format of a particular image',
        'Gmagick::setimagegamma' => 'Sets the image gamma',
        'Gmagick::setimagegreenprimary' => 'Sets the image chromaticity green primary point',
        'Gmagick::setimageindex' => 'Set the iterator to the position in the image list specified with the index parameter',
        'Gmagick::setimageinterlacescheme' => 'Sets the interlace scheme of the image',
        'Gmagick::setimageiterations' => 'Sets the image iterations',
        'Gmagick::setimageprofile' => 'Adds a named profile to the Gmagick object',
        'Gmagick::setimageredprimary' => 'Sets the image chromaticity red primary point',
        'Gmagick::setimagerenderingintent' => 'Sets the iamge rendering intent',
        'Gmagick::setimageresolution' => 'Sets the image resolution',
        'Gmagick::setimagescene' => 'Sets the image scene',
        'Gmagick::setimagetype' => 'Sets the image type',
        'Gmagick::setimageunits' => 'Sets the image units of resolution',
        'Gmagick::setimagewhitepoint' => 'Sets the image chromaticity white point',
        'Gmagick::setsamplingfactors' => 'Sets the image sampling factors',
        'Gmagick::setsize' => 'Sets the size of the Gmagick object',
        'Gmagick::shearimage' => 'Createing a parallelogram',
        'Gmagick::solarizeimage' => 'Applies a solaring effect to the image',
        'Gmagick::spreadimage' => 'Randomly displaces each pixedl in a block',
        'Gmagick::stripimage' => 'Strips an image of all profiles and comments',
        'Gmagick::swirlimage' => 'Swirls the pixels about the center of the image',
        'Gmagick::thumbnailimage' => 'Changes the size of an image',
        'Gmagick::trimimage' => 'Remove edges from the image',
        'Gmagick::write' => 'Alias of Gmagick::writeimage',
        'Gmagick::writeimage' => 'Write an image to the specified filename',
        'Gmagick::__construct' => 'The Gmagick constructor',
        'GmagickDraw::annotate' => 'Draws text on the image',
        'GmagickDraw::arc' => 'Draws an arc',
        'GmagickDraw::bezier' => 'Draws a bezier curve',
        'GmagickDraw::ellipse' => 'Drawa an ellipse on the image',
        'GmagickDraw::getfillcolor' => 'Returns the fill color',
        'GmagickDraw::getfillopactiy' => 'Returns the opacity used when drawing',
        'GmagickDraw::getfont' => 'Returns the font',
        'GmagickDraw::getfontsize' => 'Returns the font pointsize',
        'GmagickDraw::getfontstyle' => 'Returns the font style',
        'GmagickDraw::getfontweight' => 'Returns the font weight',
        'GmagickDraw::getstrokecolor' => 'Returns the color used for stroking object outlines',
        'GmagickDraw::getstrokeopacity' => 'Returns the opacity of stroked object outlines',
        'GmagickDraw::getstrokewidth' => 'Returns the width of the stroke used to draw object outlines',
        'GmagickDraw::gettextdecoration' => 'Returns the text decoration',
        'GmagickDraw::gettextencoding' => 'Returns the code set used for text annotations',
        'GmagickDraw::line' => 'Draws a line',
        'GmagickDraw::point' => 'Draw a point',
        'GmagickDraw::polygon' => 'Draws a polygon',
        'GmagickDraw::polyline' => 'Draws a polyline',
        'GmagickDraw::rectangle' => 'Draws a rectangle',
        'GmagickDraw::rotate' => 'Applies the specified rotation to the current coordinate space',
        'GmagickDraw::roundrectangle' => 'Draws a rounded rectangle',
        'GmagickDraw::scale' => 'Adjusts the scaling factor',
        'GmagickDraw::setfillcolor' => 'Sets the fill color to be used for drawing filled objects',
        'GmagickDraw::setfillopacity' => 'The setfillopacity purpose',
        'GmagickDraw::setfont' => 'Sets the fully-specified font to use when annotating with text',
        'GmagickDraw::setfontsize' => 'Sets the font pointsize to use when annotating with text',
        'GmagickDraw::setfontstyle' => 'Sets the style to use when annotating with text',
        'GmagickDraw::setfontweight' => 'Sets the font weight',
        'GmagickDraw::setstrokecolor' => 'Sets the color used for stroking object outlines',
        'GmagickDraw::setstrokeopacity' => 'Specifies the opacity of stroked object outlines',
        'GmagickDraw::setstrokewidth' => 'Sets the width of the stroke used to draw object outlines',
        'GmagickDraw::settextdecoration' => 'Specified a decoration',
        'GmagickDraw::settextencoding' => 'Specified the text code set',
        'GmagickPixel::getcolor' => 'Returns the color',
        'GmagickPixel::getcolorcount' => 'Returns the color count associated with this color',
        'GmagickPixel::getcolorvalue' => 'Gets the normalized value of the provided color channel',
        'GmagickPixel::setcolor' => 'Sets the color',
        'GmagickPixel::setcolorvalue' => 'Sets the normalized value of one of the channels',
        'GmagickPixel::__construct' => 'The GmagickPixel constructor',
        'gmdate' => 'Format a GMT/UTC data/time',
        'gmmktime' => 'Get Unix timestamp for a GMT date',
        'GMP::__serialize' => 'Serializes the GMP object',
        'GMP::__unserialize' => 'Deserializes the data parameter into a GMP object',
        'gmp_abs' => 'Absolute value',
        'gmp_add' => 'Add numbers',
        'gmp_and' => 'Bitwise AND',
        'gmp_binomial' => 'Calculates binomial coefficient',
        'gmp_clrbit' => 'Clear bit',
        'gmp_cmp' => 'Compare numbers',
        'gmp_com' => "Calculates one's complement",
        'gmp_div' => 'Alias of gmp_div_q',
        'gmp_divexact' => 'Exact division of numbers',
        'gmp_div_q' => 'Divide numbers',
        'gmp_div_qr' => 'Divide numbers and get quotient and remainder',
        'gmp_div_r' => 'Remainder of the division of numbers',
        'gmp_export' => 'Export to a binary string',
        'gmp_fact' => 'Factorial',
        'gmp_gcd' => 'Calculate GCD',
        'gmp_gcdext' => 'Calculate GCD and multipliers',
        'gmp_hamdist' => 'Hamming distance',
        'gmp_import' => 'Import from a binary string',
        'gmp_init' => 'Create GMP number',
        'gmp_intval' => 'Convert GMP number to integer',
        'gmp_invert' => 'Inverse by modulo',
        'gmp_jacobi' => 'Jacobi symbol',
        'gmp_kronecker' => 'Kronecker symbol',
        'gmp_lcm' => 'Calculate LCM',
        'gmp_legendre' => 'Legendre symbol',
        'gmp_mod' => 'Modulo operation',
        'gmp_mul' => 'Multiply numbers',
        'gmp_neg' => 'Negate number',
        'gmp_nextprime' => 'Find next prime number',
        'gmp_or' => 'Bitwise OR',
        'gmp_perfect_power' => 'Perfect power check',
        'gmp_perfect_square' => 'Perfect square check',
        'gmp_popcount' => 'Population count',
        'gmp_pow' => 'Raise number into power',
        'gmp_powm' => 'Raise number into power with modulo',
        'gmp_prob_prime' => 'Check if number is "probably prime"',
        'gmp_random' => 'Random number',
        'gmp_random_bits' => 'Random number',
        'gmp_random_range' => 'Random number',
        'gmp_random_seed' => 'Sets the RNG seed',
        'gmp_root' => 'Take the integer part and remainder of nth root',
        'gmp_rootrem' => 'Take the integer part and rmainder of nth root',
        'gmp_scan0' => 'Scan for 0',
        'gmp_scan1' => 'Scan for 1',
        'gmp_setbit' => 'Set bit',
        'gmp_sign' => 'Sign of number',
        'gmp_sqrt' => 'Calculate square root',
        'gmp_sqrtrem' => 'Square root with remainder',
        'gmp_strval' => 'Convert GMP number to string',
        'gmp_sub' => 'Substract numbers',
        'gmp_testbit' => 'Tests if a bit is set',
        'gmp_xor' => 'Bitwise XOR',
        'gmstrftime' => 'Format a GMT/UTC tiem/date according to locale settings',
        'gnupg_adddecryptkeys' => 'Add a key for decryption',
        'gnupg_addenctyptkeys' => 'Add a key for encryption',
        'gnupg_addsignkey' => 'Add a key for signing',
        'gnupg_cleatdecryptkeys' => 'Removes all keys which were set for decryption before',
        'gnupg_clearencryptkeys' => 'Removes all keys witch were set for encryption before',
        'gunpg_clearsignkeys' => 'Removes all keys which were set for signing before',
        'gunpg_decrypt' => 'Decrypts a given text',
        'gunpg_decryptverify' => 'Decrypts and verifies a given text',
        'gunpg_encrypt' => 'Encrypts a given text',
        'gunpg_encryptsign' => 'Encrypts and signs a given text',
        'gunpg_export' => 'Exports a key',
        'gunpg_getengineinfo' => 'Returns the engine info',
        'gunpg_geterror' => 'Returns the errortext, if a function fails',
        'gunpg_geterrorinfo' => 'Returns the error info',
        'gunpg_gerprotocol' => 'Returns the currently active protocol for all operations',
        'gunpg_import' => 'Import a key',
        'gunpg_init' => 'Initialize a connection',
        'gunpg_keyinfo' => 'Returns an array with informatin about all keys that matches the given pattern',
        'gunpg_setarmor' => 'Toggle armored outpupt',
        'gunpg_seterrormode' => 'Sets the mode for error_reporting',
        'gunpg_setsignmode' => 'Set the mode for signing',
        'gunpg_sign' => 'Signs a given text',
        'gunpg_verify' => 'Verifies a signed text',
        'grapheme_extract' => 'Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8',
        'grapheme_stripos' => 'Find positin (in grapheme units) of first occurrence of a case-insensitive string',
        'grapheme_stristr' => 'Returns part of haystack string from the first occurrence of case-insensiteive needle to the en of haystack',
        'grapheme_strlen' => 'Get string length in grapheme units',
        'grapheme_strpos' => 'Find position (in grapheme units) of first occurrence of a string',
        'grapheme_strripos' => 'Find position (in grapheme units) of last occurrence of a case-insensitive string',
        'grapheme_strrpos' => 'Find position (in grapheme units) of last occurrence of a string',
        'grapheme_strstr' => 'Returns part of haystack string from the first occurrence of needle to the end of haystack',
        'grapheme_substr' => 'Return part of a string',
        'gregoriantojd' => 'Converts a Gregorian date to Julian Day Count',
        'gzclose' => 'Close an open gz-file pointer',
        'gzcompress' => 'Compress a string',
        'gzdecode' => 'Decodes a gzip compressed string',
        'gzdeflate' => 'Deflate a string',
        'gzencode' => 'Create a gzip compressed string',
        'gzeof' => 'Test for EOF on a gz-file pointer',
        'gzfile' => 'Read entire gz-file into an array',
        'gzgetc' => 'Get character from gz-file pointer',
        'gzgets' => 'Get line from file pointer',
        'gzgetss' => 'Get line from gz-file pointer and strip HTML tags',
        'gzinflate' => 'Inflate a deflated string',
        'gzopen' => 'Open gz-file',
        'gzpassthru' => 'Output all remaining data on a gz-file pointer',
        'gzputs' => 'Alias of gzwrite',
        'gzread' => 'Binary-safe gz-file read',
        'gzrewind' => 'Rewind the position of a gz-file pointer',
        'gzseek' => 'Seek on a gz-file pointer',
        'gztell' => 'Tell gz-file pointer read/write position',
        'gzuncompress' => 'Uncompress a compressed string',
        'gzwrite' => 'Binary-safe gz-file write',
    );

    public $h = array(
        'hash' => 'Generate a hash value (message digest)',
        'HashContext::__construct' => 'Private constructor to disallow direct instantation',
        'HashContext::__serialize' => 'Serializes the HashContext object',
        'HashContext::__unserialize' => 'Deserializes the data parameter into a HashContext object',
        'hash_algos' => 'Return a list of registered hashing algorithm',
        'hash_copy' => 'Copy hashing context',
        'hash_equals' => 'Timing attack safe string comparison',
        'hash_file' => 'Generate a hash value using the contents of a given file',
        'hash_final' => 'Finalize an incremental hash and return resulting digest',
        'hash_hkdf' => 'Generate a HKDF key derivatin of a supplied key input',
        'hash_hmac' => 'Generate a keyed hash value using the HMAC method',
        'hash_hmac_algos' => 'REturn a list of registered hashing algorithms suitable for hash_mac',
        'hash_hmac_file' => 'Generate a keyed hash value using the HMAC method and the contents of a given file',
        'hash_init' => 'Initialize an incremental hashing context',
        'hash_pbkdf2' => 'Generate a PBKDF2 key derivation of a suppplied password',
        'hash_update' => 'Pump data into an active hashing context',
        'hash_update_file' => 'Pump data into an active hashing context from a file',
        'hash_update_stream' => 'pump data into an active hasing context from an open stream',
        'header' => 'Send a raw HTTP header',
        'headers_lists' => 'Returns a list of response headers sent (or ready to send)',
        'headers_sent' => 'Checks if or where headers have been sent',
        'header_register_callback' => 'Call a header function',
        'header_remove' => 'Remove previously set headers',
        'hebrev' => 'Convert logical Hebrew text to visual text',
        'hebrevc' => 'Convert logical Hebrew text to visual text with newline conversion',
        'hex2bin' => 'Decodes a hexadecimally encoded binary string',
        'hexdec' => 'Hexadecimal to decimal',
        'highlight_file' => 'Syntax highlighting of a file',
        'highlight_string' => 'Syntax highlighting of a string',
        'hrtime' => "Get the system's high resolution time",
        'HRTime\PerformanceCounter::getFrequency' => 'Timer frequency in ticks per second',
        'HRTime\PerformanceCounter::getTicks' => 'Current ticks from the system',
        'HRTime\PerformanceCounter::getTicksSince' => 'Ticks elapsed since the given value',
        'HRTime\StopWatch::getElapsedTicks' => 'Get elapsed ticks for all intervals',
        'HRTime\StopWatch::getElapsedTime' => 'Get elapsed time for all intervals',
        'HRTime\StopWatch::getLastElapsedTicks' => 'Get elapsed ticks for the last interval',
        'HRTime\StopWatch::getLastElapsedTime' => 'Get elapsed time for the last interval',
        'HRTime\StopWatch::isRunning' => 'Whether the measurement is running',
        'HRTime\StopWatch::start' => 'Start time measurement',
        'HRTime\StopWatch::stop' => 'Stop time measurement',
        'htmlentities' => 'Convert all applicable characters to HTML entities',
        'htmlspecialchars' => 'Convert special characters to HTML entitite',
        'htmlspecialchars_decode' => 'Convert special HTML entities back to characters',
        'html_entity_decode' => 'Convert HTML entities to their corresponding characters',
        'http://' => 'Accessing HTTP(s) URLs',
        'HTTP context options' => 'HTTP context option listing',
        'http_build_query' => 'Generate URL-encoded query string',
        'http_response_code' => 'Get or Set the HTTP response code',
        'hypot' => 'Calculate the lenght of the hypotenuse of a right-angle triangle',
    );

    public $i = array(
        'ibase_add_user' => 'Add a user to a security database',
        'ibase_affected_rows' => 'Returns the number of rows that were affected by the previous query',
        'ibase_backup' => 'Initiates a backup task in the service manager and returns immediately',
        'ibase_blob_add' => 'Add data into a newly created blob',
        'ibase_blob_cancel' => 'Cancel creating blob',
        'ibase_blob_close' => 'Close blob',
        'ibase_blob_create' => 'Create a new blob for adding data',
        'ibase_blob_echo' => 'Output blob contents to browser',
        'ibase_blob_get' => 'Get len bytes data from open blob',
        'ibase_blog_import' => 'Create blob, copy file in it, and close it',
        'ibase_blob_info' => 'Return blob length and other useful info',
        'ibase_blob_open' => 'Open blob for retrieving data parts',
        'ibase_close' => 'Close a connection to an InterBase dtabase',
        'ibase_commit' => 'Commit a transaction',
        'ibase_commit_ret' => 'Commit a transaction without closing it',
        'ibase_connect' => 'Open a connection to a database',
        'ibase_db_info' => 'Request atatistics about a database',
        'ibase_delete_user' => 'Delete a user from a security database',
        'ibase_drop_db' => 'Drops a database',
        'ibase_errcode' => 'Return an error code',
        'ibase_errmsg' => 'Return error messages',
        'ibase_execute' => 'Execute a previously prepared query',
        'ibase_fetch_assoc' => 'Fetch a result row from a query as an associative array',
        'ibase_fetch_object' => 'Get an object from a InterBase database',
        'ibase_fetch_row' => 'Fetch a row from an InterBase database',
        'ibase_field_info' => 'Get information about a field',
        'ibase_free_event_handler' => 'Cancels a registeered event handler',
        'ibase_free_query' => 'Free memory allocated by a prepared query',
        'ibase_free_result' => 'Free a result set',
        'ibase_gen_id' => 'Increments the named generator an returns its new value',
        'ibase_maintain_db' => 'Execute a maintenance command on the database server',
        'ibase_modify_user' => 'Modify a user to a security dtabase',
        'ibase_name_result' => 'Assigns a name to result set',
        'ibase_num_fields' => 'Get the number of fields in a result set',
        'ibase_num_params' => 'Return the number of parameters in a prepared query',
        'ibase_param_info' => 'Return infomation about a parameter in a prepared query',
        'ibase_pconnect' => 'Open a persistent connection to an InterBase database',
        'ibase_prepare' => 'Prepare a query for late binding of parameter place holders and execution',
        'ibase_query' => 'Execute a query on an InterBase database',
        'ibase_restore' => 'Initiates a restore task in the service manager and returns immedidately',
        'ibase_rollback' => 'Roll back a transaction',
        'ibase_rollback_ret' => 'Roll back a transaction without closing it',
        'ibase_server_info' => 'Request information about a database server',
        'ibase_service_attach' => 'Connect to the service manager',
        'ibase_service_detach' => 'Disconnect from the service manager',
        'ibase_set_event_handler' => 'Register a callback function to be called whten events are posted',
        'ibase_trans' => 'Begin a transaction',
        'ibase_wait_event' => 'Wait for an event to be posted by the database',
        'iconv' => 'Convert string to requested character encoding',
        'iconv_get_encoding' => 'Retrieve internal configuration variables of iconv extension',
        'iconv_mime_decode' => 'Decodes a MIME header field',
        'iconv_mime_decode_headers' => 'Decodes multiple MIME header field at once',
        'iconv_mime_encode' => 'Composes a MIME header field',
        'iconv_set_encoding' => 'Set current seting for character encoding conversion',
        'iconv_strlen' => 'Returns the character count of string',
        'iconv_strpos' => 'Finds position of first occurence of a needdle within a haystack',
        'iconv_strrpos' => 'Fidns the last occurrence of a needle within a haystack',
        'iconv_substr' => 'Cut out part of a string',
        'idate' => 'Format a local tiem/date as interger',
        'idn_to_ascii' => 'Convert domain name to IDNA ASCII form',
        'idn_to_utf8' => 'Convert domain name from IDNA ASCII to Unicode',
        'igbinary_serialize' => 'Generates a compact, storable binary representation of a value',
        'igbinary_unserialize' => 'Creates a PHP value from a stored representation from igbinary_serialize',
        'ignore_user_abort' => 'Set whether a client disconnect should abort script execution',
        'image2wbmp' => 'Output image to browser or file',
        'imageaffine' => 'Return an image containing the affine transformed src image, using an optinal clipping area',
        'imageaffinematrixconcat' => 'Concatenate two affine transformation matrices',
        'imageaffinematrixget' => 'Get an affine transformation matrix',
        'imagealphablending' => 'Get the blending mode for an image',
        'imageantialias' => 'Should antialias functions be used or not',
        'imagearc' => 'Draws an arc',
        'imagevif' => 'Output image to browser or file',
        'imagebmp' => 'Output a BMP image to brower or file',
        'imagechar' => 'Draw a character horizontally',
        'imagecharup' => 'Draw a charactre vertically',
        'imagecolorallocate' => 'Allocate a color for an image',
        'imagecolorallocatealpha' => 'Allocate a color for an image',
        'imagecolorat' => 'Get the index of the color of a pixel',
        'imagecolorclosest' => 'Get the index of the closest color to the specified color',
        'imagecolorclosestalpha' => 'Get the index of the closest color to the specified color + alpha',
        'imagecolorclosesthwb' => 'Gt the indexf the color which has the hue, white and blackness',
        'imagecolordeallocate' => 'De-allocate a color for an image',
        'imagecolorexact' => 'Get the index of the specified color',
        'imagecolorexactalpha' => 'Get the index of the specified color + alpha',
        'imagecolormatch' => 'Makes the colors of the palette version of an image more closely match the ture color version',
        'imagecolorresolve' => 'Get the index of the specified color or its closest possible alternative',
        'imagecolorresolvealpha' => 'Get the index of the specified color + alpha or its closest possible alternative',
        'iamgecolorset' => 'Set the colot for the specified palette index',
        'imagecolorsforindex' => 'Get the colors for an index',
        'imagecolorstotal' => "Find out the number of colors in an image's palette",
        'imagecolortransparent' => 'Define a color as transparent',
        'imageconvolution' => 'Apply a 3x3 convolutin matrix, using coefficient and offset',
        'imagecopy' => 'Copy part of an image',
        'imagecopymerge' => 'Copy and merge part of an image',
        'imagecopymergegray' => 'Copy and merge part of an image with gray scale',
        'imagecopyresampled' => 'Copy an resize part of an image with resampling',
        'imagecopyresized' => 'Copy and resize part of an image',
        'imagecreate' => 'Create a new palette based image',
        'imagecreatefromavif' => 'Create a new image from file or URL',
        'imagecreatefrombmp' => 'Create a new image from file or URL',
        'imagecreatefromgd' => 'Create a new image form GD file or URL',
        'imagecreatefromgd2' => 'Create a new image from GD2 file or URL',
        'imagecreatefromgd2part' => 'Create a new image from a given part of GD@ file or URL',
        'imagecreatefromgif' => 'Create a new image from file or URL',
        'imagecreatefromjpeg' => 'Create a new image from file or URL',
        'imagecreatefrompng' => 'Create a new imag from file or URL',
        'imagecreatefromstring' => 'Create a ne image from the image stream in the string',
        'imagecreatefromtga' => 'Create a image from file or URL',
        'imagecreatefromwbmp' => 'Create a new image from file or URL',
        'imagecreatefromwebp' => 'Create a new image from file or URL',
        'imagecraatefromxbm' => 'Create a new image from file or URL',
        'imagecreatefromxpm' => 'Create a new image from file or URL',
        'imagecreatetruecolor' => 'Create a new true color image',
        'imagecrop' => 'Crop an image to the given rectangle',
        'imagecropauto' => 'Crop an image automatically using one of the available modes',
        'imagedashedline' => 'Draw a dashed line',
        'imagedestroy' => 'Destroy an image',
        'imageellipse' => 'Draw an ellipse',
        'imagefill' => 'Food fill',
        'imagefilledarc' => 'Draw a partial arc and fill it',
        'imagefilledellipse' => 'Draw a filled ellipse',
        'imagefilledplygon' => 'Draw a filled polygon',
        'imagefilledrectangle' => 'Draw a filled rectangle',
        'imagefilltoborder' => 'Flood fill to specific color',
        'imagefilter' => 'Applies a filter to an image',
        'imageflip' => 'Flips an image using a given mode',
        'imagefontheight' => 'Get font height',
        'imagefontwidth' => 'Get font width',
        'imageftbbox' => 'Give the bounding box of a text using fonts via freetype2',
        'imagefttext' => 'Write text to the image using fonts using FreeType 2',
        'imagegammacorrect' => 'Apply a gamma correction to a GD image',
        'imagegd' => 'Output GD image to browser or file',
        'imagegd2' => 'Output GD2 image to browsr or file',
        'imagegetclip' => 'Get the clipping rectangle',
        'imagegetinterpolation' => 'Get he interpolation method',
        'imagegif' => 'Output image to browser of file',
        'imagegrabscreen' => 'Captures the whole screen',
        'imagegrabwindow' => 'Captures a window',
        'imageinterlace' => 'Enable or disable interlace',
        'imageistruecolor' => 'Finds whether an image is a truecolor image',
        'imagejpeg' => 'Output image to browser or file',
        'imagelayereffect' => 'Set the alpha blednging flag to use layering dffects',
        'imageline' => 'Draw a line',
        'imageloadfont' => 'Load a new font',
        'imageopenpolygon' => 'Draws an open polygon',
        'imagepalettecopy' => 'Copy the palette from one one image to another',
        'imagepalettetoturecolor' => 'Converts a palette based image to true color',
        'imagepng' => 'Output a PNG image to either the browser or a file',
        'imagepolygon' => 'Draws a polygon',
        'imagerectangle' => 'Draw a rectangle',
        'imageresolution' => 'Get or set the resolution of the image',
        'imagerotate' => 'Rotate an image with a given angle',
        'imagesavealpha' => 'Whether to retain full alpha channel information when saving PNG images',
        'imagescale' => 'Scale an image using the given new width and height',
        'imagesetbrush' => 'Set brush image for line drawing',
        'imagesetslip' => 'Set the clopping rectangle',
        'imagesetinterpolation' => 'Set the interpolation method',
        'imagesetpixel' => 'Set a single pixel',
        'imagesetstyle' => 'Set the style for line drawing',
        'imagesetthickness' => 'Set the thicknes for line drawing',
        'imagesettile' => 'Set the tile image for filling',
        'imagestring' => 'Draw a string  horizongtally',
        'imagestringup' => 'Draw a string vertically',
        'imagesx' => 'Get image with',
        'imagesy' => 'Get image height',
        'imageturecolortopalette' => 'Convert a true color image to a palette image',
        'imagettfbbox' => 'Give the bounding box of a text using TrueType fonts',
        'imagettftext' => 'Write text to the image using TrueType fonts',
        'imagetypes' => 'Return the image to browser or file',
        'imagewbmp' => 'Output image to browser or file',
        'imagewebp' => 'Output an WebP image to browser or file',
        'imagexbm' => 'Output an XBM image to browser or file',
        'image_type_to_extension' => 'Get file extensin for image type',
        'image_type_to_mime_type' => 'Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbernail, exif_imagetype',
        'Imagick::adaptiveBlurImage' => 'Adds adaptive blur filter to image',
        'Imagick::adpativeResizeImage' => 'Adpatively resize iamge with data dependent trianlgulation',
        'Imagick::adaptiveSharpenImage' => 'Adpatively sharpen the image',
        'Imagick::adpativeThresholdImage' => 'Selects a threshold for each pixel based on a range of intensity',
        'Imagick::addImage' => 'Adds new image to Imagick object image list',
        'Imagick::addNoiseImage' => 'Adds random noise to the image',
        'Imagick::affineTransformImage' => 'Transforms an image',
        'Imagick::animateImages' => 'Animates an image or images',
        'Imagick::annotateImage' => 'Annotates an image with text',
        'Imagick::appendImages' => 'Append a set of images',
        'Imagick::atuoLevelImage' => 'Description',
        'Imagick::averageImages' => 'Average a set of images',
        'Imagick::blackThresholdImage' => 'Forces all pixels below the threshold into balck',
        'Imagick::blueShiftImage' => 'Description',
        'Imagick::blurImage' => 'Adds blur filter to image',
        'Imagick::borderImage' => 'Surrounds the image with a border',
        'Imagick::brightnessContrastImage' => 'Description',
        'Imagick::charcoalImage' => 'Simulates a charcoal drawing',
        'Imagick::chopImage' => 'Removes a region of an image and trims',
        'Imagick::clampImage' => 'Description',
        'Imagick::clear' => 'Clears all resources associated to Imagick object',
        'Imagick::clipImage' => 'Clips along the first path from the 8BIM profile',
        'Imagick::clipImagePath' => 'Descritpion',
        'Imagick::clipPathImage' => 'Clips along the named paths from the 8BIM profile',
        'Imagick::clone' => 'Makes an exact copy in the image',
        'Imagick::clutImage' => 'Replaces colors in the image',
        'Imagick::coalesceImage' => 'Composites a set of images',
        'Imagick::colorFloodfillImage' => 'Changes the color value of any pixel that matches target',
        'Imagick::colorizeImage' => 'Blends the fill color with the image',
        'Imagick::colorMatrixImage' => 'Description',
        'Imagick::combineImages' => 'Combines one or more images into a single image',
        'Imagick::commentImage' => 'Adds a comment to your image',
        'Imagick::compareImageChannels' => 'Return the difference in one or more images',
        'Imagick::compareImageLayers' => 'Returns the maximum bounding region between images',
        'Imagick::compareImages' => 'Compares an image to a reconstructed image',
        'Imagick::compositeImage' => 'Composite one contrast of the image',
        'Imagick::contrastImage' => 'Change the contrast of the image',
        'Imagick::contrastStretchImage' => 'Enhances the contrast of a color image',
        'Imagick::convolveImage' => 'Applies a custom convolution kernel to the image',
        'Imagick::count' => 'Get the number of images',
        'Imagick::cropImage' => 'Extracts a region of the image',
        'Imagick::cropThumbnailImage' => 'Creates a crop thumbnail',
        'Imagick::current' => 'Returns a reference to the current Imagick object',
        'Imagick::cycleColormapImage' => "Displaces an image's colormap",
        'Imagick::decipherImage' => 'Deciphers an image',
        'Imagick::deconstructImages' => 'Returns certain pixel differences between images',
        'Imagick::deleteImageArtifact' => 'Delete image artifact',
        'Imagick::deleteImageProperty' => 'Description',
        'Imagick::deskewImage' => 'Removes skew from the image',
        'Imagick::despeckleImage' => 'Reduces the speckle noise in an image',
        'Imagick::destroy' => 'Destorys the Imagick object',
        'Imagick::displayImage' => 'Displays an image',
        'Imagick::displayImages' => 'Displays an image or image sequence',
        'Imagick::distortImage' => 'Distorts an image using various idstortion methods',
        'Imagick::drawImage' => 'Renders the ImagickDraw object on the current Image',
        'Imagick::edgeImage' => 'Enhance edges within the image',
        'Imagick::embossImage' => 'Returns a grayscale image with a three-demensional effect',
        'Imagick::encipherImage' => 'Enciphers an image',
        'Imagick::enhanceImage' => 'Improves the quality of noisy image',
        'Imagick::equalizeImage' => 'Equalizes the image histogram',
        'Imagick::evaluateImage' => 'Applies an expression to an image',
        'Imagick::exportImagePixels' => 'Exports raw image pixels',
        'Imagick::extentImage' => 'Set image size',
        'Imagick::filter' => 'Description',
        'Imagick::flattenImages' => 'Merges a sequence of images',
        'Imagick::flipImage' => 'Creates a vertical mirror image',
        'Imagick::floodFillPaintImage' => 'Changes the color value of any pixel that matches target',
        'Imagick::flopImage' => 'Creates a horizontal mirror image',
        'Imagick::forwardFourierTransformImage' => 'Description',
        'Imagick::frameImage' => 'Adds a simulated three-dimensional border',
        'Imagick::functionImage' => 'Applies a function on the image',
        'Imagick::fxImage' => 'Evaluate expression for each pixel in the image',
        'Imagick::gammaImage' => 'Gamma-corrects an image',
        'Imagick::gaussianBlurImage' => 'Blurs an image',
        'Imagick::getColorspace' => 'Gets the colorspace',
        'Imagick::getCompression' => 'Gets the object compression type',
        'Imagick::getCompressionQuality' => 'Gets the object compression quality',
        'Imagick::getCopyright' => 'Returns the ImageMagick API copyright as a string',
        'Imagick::getFilename' => 'The filename associated with an image sequence',
        'Imagick::getFont' => 'Gets Font',
        'Imagick::getFormat' => 'Returns the format of the Imagick object',
        'Imagick::getGravity' => 'Gets the gravity',
        'Imagick::getHomeURL' => 'Returns the ImageMagick home URL',
        'Imagick::getImage' => 'Returns a new Imagick object',
        'Imagick::getImageAlphaChannel' => 'Checks if the image has an alpha channel',
        'Imagick::getImageArtifact' => 'Get image artifact',
        'Imagick::getImageAttribute' => 'Returns a named attribute',
        'Imagick::getImageBackgroundColor' => 'Returns the image background color',
        'Imagick::getImageBlob' => 'Returns the image sequence as a blob',
        'Imagick::getImageBluePrimary' => 'Returns chromaticy blue primary point',
        'Imagick::getImageBorderColor' => 'Returns the image border color',
        'Imagick::getImageChannelDepth' => 'Gets the depth for a particular image channel',
        'Imagick::getImageChannelDistortion' => 'Compares image channels of an image to a reconstructed image',
        'Imagick::getImageChannelDistortions' => 'Gets channel distortions',
        'Imagick::getImageChannelExtrema' => 'Gets the extrema for one or more image channels',
        'Imagick::getImageChannelKurtosis' => 'The getImageChannelKurtosis purpose',
        'Imagick::getImageChannelMean' => 'Gets the mean and standard deviation',
        'Imagick::getImageChannelRange' => 'Gets channel range',
        'Imagick::getImageChannelStatistic' => 'Returns statistics for each channel in the image',
        'Imagick::getImageClipMask' => 'Gets image clip mask',
        'Imagick::getImageColormapColor' => 'Returns statistics for each channel in the image',
        'Imagick::getImageColors' => 'Gets the number of unique colors in the image',
        'Imagick::getImageColorspace' => 'Gets the image colorspace',
        'Imagick::getImageCompose' => 'Returns the composite opeartor associated with the image',
        'Imagick::getImageCompression' => 'Gets the current image's compression type',
        'Imagick::getImageCompressionQuality' => 'Gets the current image's compression quality',
        'Imagick::getImageDelay' => 'Gets the image delay',
        'Imagick::getImageDepth' => 'Gets the image depth',
        'Imagick::getImageDispose' => 'Gets the image disposal method',
        'Imagick::getImageDistortion' => 'Compares an image to a reconstructed image',
        'Imagick::getImageExtrema' => 'Gets the extrema for the image',
        'Imagick::getImageFilename' => 'Returns the filename of a particular image in a sequence',
        'Imagick::getImageFormat' => 'Returns the format of a particular image in a sequence',
        'Imagick::getImageGamma' => 'Gets the image gamma',
        'Imagick::getImageGeometry' => 'Gets the width and height as an associative array',
        'Imagick::getImageGravity' => 'Gets the image gravity',
        'Imagick::getImageGreenPrimary' => 'Returns the chromaticy green primary point',
        'Imagick::getImageHeight' => 'Returns the image height',
        'Imagick::getImageHistogram' => 'Gets the image histogram',
        'Imagick::getImageIndex' => 'Gets the image intgerlace scheme',
        'Imagick::getImageInterlaceScheme' => 'Gets the image interlace scheme',
        'Imagick::getImageInterpolateMethod' => 'Returns the interpolation method',
        'Imagick::getImageIterations' => 'Gets the image iterations',
        'Imagick::getImageLength' => 'Return if the image lenght in bytes',
        'Imagick::getImageMatte' => 'Return if the image has a matte channel',
        'Imagick::getImageMatteColor' => 'Returns the image matte color',
        'Imagick::getImageMimeType' => 'Description',
        'Imagick::getImageOrientation' => 'Gets the image orientation',
        'Imagick::getImagePage' => 'Returns the page geometry',
        'Imagick::getImagePixelColor' => 'Returns the color of the specified pixel',
        'Imagick::getImageProfile' => 'Returns the named image profile',
        'Imagick::getImageProfiles' => 'Returns the image profiles',
        'Imagick::getImagePrperties' => 'Returns the image properties',
        'Imagick::getImageProperty' => 'Returns the named image property',
        'Imagick::getImageRedPrimary' => 'Returns the chromaticity red primary point',
        'Imagick::getImageRegion' => 'Extracts a region of the image',
        'Imagick::getImageRenderingIntent' => 'Gets the image rendering intent',
        'Imagick::getImageResolution' => 'Gets the image X and Y resolution',
        'Imagick::getImagesBlob' => 'Returns all image sequences as a blob',
        'Imagick::getImageScene' => 'Gets the image scene',
        'Imagick::getImageSignature' => 'Generates an SHA-256 message digest',
        'Imagick::getImageSize' => 'Returns the image length in bytes',
        'Imagick::getImageTicksPerSecond' => 'Gets the image ticks-per-second',
        'Imagick::getImageTotalInkDensity' => 'Gets the image total ink density',
        'Imagick::getImageType' => 'Gets the potential image type',
        'Imagick::getImageUnits' => 'Gets the image units of resolution',
        'Imagick::getImageVirtualPixelMethod' => 'Returns the virtual pixel method',
        'Imagick::getImageWhitePoint' => 'Returns the chromaticity white point',
        'Imagick::getImageWidth' => 'Returns the image width',
        'Imagick::getInterlaceScheme' => 'Gets the object interlace scheme',
        'Imagick::getIteratorIndex' => 'Gets the index of the current active image',
        'Imagick::getNumberImages' => 'Returns thee number of image in the object',
        'Imagick::getOption' => 'Returns a value associated with the specified key',
        'Imagick::getPackageName' => 'Returns the ImageMagick package name',
        'Imagick::getPage' => 'Returns the page geometry',
        'Imagick::getPixelIterator' => 'Returns a MagickPixelIterator',
        'Imagick::getPixelRegionIterator' => 'Gt an ImagickPixelIterator for an image section',
        'Imagick::getPointSize' => 'Gets point size',
        'Imagick::getQuantum' => 'Description',
        'Imagick::getQuantumDepth' => 'Gets the quantum depth',
        'Imagick::getQuantumRange' => 'Returns the Imagick quantum range',
        'Imagick::getRegistry' => 'Description',
        'Imagick::getReleaseDate' => 'Returns the ImageMagick relese date',
        'Imagick::getResource' => "Returns the specified resource's memory usage",
        'Imagick::getResourceLimit' => 'Returns the specified resource limit',
        'Imagick::getSamplingFactors' => 'Gets the horizontal and vertical smapling factor',
        'Imagick::getSize' => 'Returns the size associated with the Imagick object',
        'Imagick::getSizeOffset' => 'Returns the size offset',
        'Imagick::getVersion' => 'Returns the ImageMagick API version',
        'Imagick::haldClutImage' => 'Replaces colors in the image',
        'Imagick::hasNextImage' => 'Checks if the object has a previous image',
        'Imagick::hasPreviousImage' => 'Checks if the object has a previous iamge',
        'Imagick::identifyFormat' => 'Description',
        'Imagick::identifyImage' => 'Creates a new image as a copy',
        'Imagick::implodeImage' => 'Creates a new image as a copy',
        'Imagick::importImagePixels' => 'Imports image pixels',
        'Imagick::inverseFourierTransformImage' => 'Description',
        'Imagick::labelImage' => 'Adds a label to an image',
        'Imagick::levelImage' => 'Adjusts the levels of an image',
        'Imagick::linearStretchImage' => 'Stretches with saturation the image intensity',
        'Imagick::liquidRescaleImage' => 'Animates an image or images',
        'Imagick::listRegistry' => 'Description',
        'Imagick::magnifyImage' => 'Scales an image proportionally 2x',
        'Imagick::mapImage' => 'Replaces the colors of an image with the closest color from a reference image',
        'Imagick::matteFloodfillImage' => 'Changes the transparency value of a color',
        'Imagick::medianFilterImage' => 'Applies a digital filter',
        'Imagick::mergeImageLayers' => 'Merges image layers',
        'Imagick::minifyImage' => 'Scales an image proportionally to half its size',
        'Imagick::modulateImage' => 'Control the brightness, saturation, and hue',
        'Imagick::montageImage' => 'Creates a composite images',
        'Imagick::morphImages' => 'Method morphs a set of images',
        'Imagick::morphology' => 'Description',
        'Imagick::mosaicImages' => 'Forms a mosaic from images',
        'Imagick::motionBlurImage' => 'Simulates motion blur',
        'Imagick::negateImage' => 'Negates the color in the reference image',
        'Imagick::newImage' => 'Creates a new image',
        'Imagick::newPseudoImage' => 'Creates a new image',
        'Imagick::nextImage' => 'Moves to the next image',
        'Imagick::normalizaImage' => 'Enhances the contrast of a color image',
        'Imagick::oilPaintImage' => 'Simulates an oil painting',
        'Imagick::opaquePaintImage' => 'Changes the color value of any pixel that matches',
        'Imagick::optimizeImageLayer' => 'Removes repeated portions of images to optimize',
        'Imagick::orderedPosterizeImage' => 'Performs an ordered dither',
        'Imagick::paintFloodfillImage' => 'Changes the color value of any pixel that matches target',
        'Imagick::paintOpaqueImage' => 'Changes any pixel thar matches color',
        'Imagick::paintTransparentImage' => 'Changes any pixel that matches color with the color defined by fill',
        'Imagick::pingImage' => 'Fetch basic attributes about the image',
        'Imagick::pingImageBlob' => 'Quickly fetch attributes',
        'Imagick::pingImageFile' => 'Get basic image attributes in a lightweight manner',
        'Imagick::polaroidImage' => 'Simulates a Polaroid picture',
        'Imagick::posterizeImage' => 'Reduces the iamge to a limited number of color level',
        'Imagick::previewImages' => 'Quickly pin-point appropprite parameters for image processing',
        'Imagick::previousImage' => 'Move to the previous image in the object',
        'Imagick::profileImage' => 'Adds or removes a profile from an image',
        'Imagick::quantizeImage' => 'Analyzes the colors within a reference image',
        'Imagick::quantizeImages' => 'Analyzes the colors within a sequence of iamges',
        'Imagick::queryFontMetrics' => 'Returns an array representing the font metrics',
        'Imagick::queryFonts' => 'Returns the configured fonts',
        'Imagick::queryFormats' => 'Returns formats supported by Imagick',
        'Imagick::radiaBlurImage' => 'Radial blur an image',
        'Imagick::raiseImage' => 'Creates a simulated 3d button-like effect',
        'Imagick::randomThresholdImage' => 'Creates an high-contrast, two-color image',
        'Imagick::readImage' => 'Reads image from filename',
        'Imagick::readImageBlob' => 'Reads image from a binary string',
        'Imagick::readImageFile' => 'Reads image from open filehandle',
        'Imagick::readimages' => 'Description',
        'Imagick::recolorImage' => 'Recolors image',
        'Imagick::reduceNoiseImage' => 'Smooths the contours of an image',
        'Imagick::remapImage' => 'Remaps image colors',
        'Imagick::removeImage' => 'Removes an image from the image list',
        'Imagick::removeImageProfile' => 'Removes the named image profile and returns it',
        'Imagick::render' => 'Renders all preceding drawing commands',
        'Imagick::resampleImage' => 'Resmaple image to desired resolution',
        'Imagick::resetImagePage' => 'Reset image page',
        'Imagick::resizeImage' => 'Scales an image',
        'Imagick::rollImage' => 'Offsets an image',
        'Imagick::rotateImage' => 'Rotates an image',
        'Imagick::rotationalBlurImage' => 'Description',
        'Imagick::roundCorners' => 'Rounds image corners',
        'Imagick::sampleImage' => 'Scales an image with pixel sampling',
        'Imagick::scaleImage' => 'Scales the size of an image',
        'Imagick::segmentImage' => 'Segments an image',
        'Imagick::selectiveBlurImage' => 'Description',
        'Imagick::separeteImageChannel' => 'Separates a channel from the image',
        'Imagick::sepiaToneImage' => 'Sepia tones an image',
        'Imagick::setBackgroundColor' => "Sets the object's default background color",
        'Imagick::setColorspace' => 'Set colorspace',
        'Imagick::setCompression' => "Sets the object's default compression type",
        'Imagick::setCompressionQuality' => "Sets the object's dafault compression quality",
        'Imagick::setFilename' => 'Sets the filename before you read or write the image',
        'Imagick::setFirstIterator' => 'Sets the Imagick iterator to the first image',
        'Imagick::setFont' => 'Sets font',
        'Imagick::setFormat' => 'Sets the format of the Imagick object',
        'Imagick::setGravity' => 'Sets the gravity',
        'Imagick::setImage' => 'Replaces image int the object',
    );
}
